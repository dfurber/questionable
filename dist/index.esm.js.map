{"version":3,"file":"index.esm.js","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../src/lib/enums.ts","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../src/survey/Answer.ts","../src/state/stepReducer.ts","../src/lib/log.ts","../src/lib/noop.tsx","../src/state/GlobalState.tsx","../node_modules/@babel/runtime/helpers/esm/createClass.js","../src/components/lib/Steps.tsx","../src/components/wizard/Navbar.tsx","../src/components/lib/Wizard.tsx","../src/components/wizard/StepLayout.tsx","../src/components/pages/LandingPage.tsx","../src/components/pages/NoResultsPage.tsx","../src/components/lib/Pages.tsx","../src/lib/date.ts","../src/components/lib/Questions.tsx","../src/components/pages/ResultsPage.tsx","../src/components/pages/SummaryPage.tsx","../src/components/questions/DateOfBirth.tsx","../src/components/questions/MultipleChoice.tsx","../src/components/questions/MultiSelect.tsx","../src/components/wizard/QuestionFactory.tsx","../src/components/wizard/StepFactory.tsx","../src/components/wizard/PageFactory.tsx","../src/components/wizard/DevPanel.tsx","../src/components/wizard/ProgressBar.tsx","../src/components/Questionable.tsx"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/**\n * Defines the known component types for questions\n */\nexport enum QUESTION_TYPE {\n  DOB = 'dob',\n  MULTIPLE_CHOICE = 'multiple_choice',\n  MULTIPLE_SELECT = 'multiple_select',\n}\n\n/**\n * Defines the known component types for pages\n */\nexport enum PAGE_TYPE {\n  LANDING = 'Landing',\n  NO_RESULTS = 'No Results',\n  RESULTS = 'Results',\n  SUMMARY = 'Summary',\n}\n\n/**\n * Defines the type of step for UI rendering\n */\nexport const STEP_TYPE = { ...PAGE_TYPE, ...QUESTION_TYPE };\nexport type TStepType = PAGE_TYPE | QUESTION_TYPE;\n\n/**\n * Navigation direction for steps by array index (+1 or -1)\n */\nexport enum DIRECTION {\n  FORWARD = 1,\n  BACKWARD = -1,\n}\n\n/**\n * Progress Bar status\n */\nexport enum PROGRESS_BAR_STATUS {\n  COMPLETE = 'complete',\n  CURRENT = 'current',\n}\n\nexport enum ACTION {\n  CALL = 'call',\n  HYBRID = 'hybrid',\n  ONLINE = 'online',\n}\n\nexport enum ACTION_TYPE {\n  RESET = 'RESET',\n  UPDATE = 'UPDATE',\n}\n\nexport enum DATE_UNIT {\n  DAY = 'day',\n  MONTH = 'month',\n  YEAR = 'year',\n}\n\nexport enum MODE {\n  EDIT = 'edit',\n  VIEW = 'view'\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isEnum = (enm: object, value: string): boolean =>\n  Object.values(enm).includes(value);\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { TAge }                 from '../lib/types';\nimport { IAnswer, IAnswerList } from './IAnswer';\n\nexport class Answer implements IAnswer {\n  public readonly started: Date;\n\n  finished?: Date;\n\n  public birthdate?: string;\n\n  public age?: TAge;\n\n  public answers: IAnswerList = {};\n\n  constructor(form: Partial<Answer> = {}) {\n    Object.assign(this, form);\n    this.started = new Date();\n  }\n}\n","import { merge }       from 'lodash';\nimport { ACTION_TYPE } from '../lib/enums';\nimport { Answer }      from '../survey/Answer';\nimport { IAnswer }     from '../survey/IAnswer';\n\n/**\n * Merges the form's answer state as the user progresses through the survey\n * @param previousState\n * @param action\n * @returns\n */\nexport const stepReducer = (\n  previousState: IAnswer,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  action: { type: ACTION_TYPE; value: any },\n): IAnswer => {\n  // Action should never be null,\n  // except when we attempt to storybook/test individual components in isolation\n  switch (action?.type) {\n    case ACTION_TYPE.RESET:\n      return new Answer();\n\n    case ACTION_TYPE.UPDATE:\n      return merge(\n        {\n          ...previousState,\n        },\n        {\n          ...action.value,\n        },\n      );\n\n    default:\n      return previousState;\n  }\n};\n","/*\n  eslint-disable no-console,\n                 @typescript-eslint/no-explicit-any,\n                 @typescript-eslint/explicit-module-boundary-types,\n*/\n\n/**\n * Logs to the console. All arguments logged as an array.\n * @param params\n * @returns\n */\nexport const log = (...params: any) => console.log([...params]);\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { log } from './log';\n\n/**\n * Generic no-operation\n */\nexport const noop = (): void => { };\n\n/**\n * Generic no-element\n * @returns empty element\n */\nexport const noel = (message = '', context = ''): JSX.Element => {\n  log('Created an empty element', message, context);\n  return (<>{message}</>);\n};\n","import React, {\n  createContext, useState, useContext, Dispatch, SetStateAction,\n} from 'react';\nimport { Questionnaire }      from '../survey/Questionnaire';\nimport { QuestionableConfig } from '../survey/Config';\n\nexport interface IQuestionable {\n  config?: QuestionableConfig;\n  questionnaire?: Questionnaire;\n}\n\nconst GlobalStateContext = createContext({\n  setState: {} as Dispatch<SetStateAction<Partial<IQuestionable>>>,\n  state:    {} as Partial<IQuestionable>,\n});\n\ntype TGlobalStateContext = {\n    setState: React.Dispatch<React.SetStateAction<Partial<IQuestionable>>>;\n    state: Partial<IQuestionable>;\n}\n\nconst useGlobalState = (): TGlobalStateContext => {\n  const context = useContext(GlobalStateContext);\n  if (!context) {\n    throw new Error('useGlobalState must be used within a GlobalStateContext');\n  }\n  return context;\n};\n\nexport const GlobalStateProvider = ({\n  children,\n  value = {} as IQuestionable,\n}: {\n  children: React.ReactNode;\n  value?: Partial<IQuestionable>;\n}): JSX.Element => {\n  const [state, setState] = useState(value);\n  return (\n    <GlobalStateContext.Provider value={{ setState, state }}>\n      {children}\n    </GlobalStateContext.Provider>\n  );\n};\n\nconst useQuestionnaire = (): Questionnaire => {\n  const { questionnaire } = useGlobalState().state;\n\n  if (!questionnaire) {\n    throw new Error('useQuestionnaire has no data');\n  }\n  return questionnaire;\n};\n\nconst useConfig = (): QuestionableConfig => {\n  const { config } = useGlobalState().state;\n\n  if (!config) {\n    throw new Error('useConfig has no data');\n  }\n  return config;\n};\n\nexport interface IGlobalState {\n  config: QuestionableConfig,\n  questionnaire: Questionnaire\n}\n\nexport const useGlobal = (): IGlobalState => ({\n  config:        useConfig(),\n  questionnaire: useQuestionnaire(),\n});\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import { kebabCase, values }        from 'lodash';\nimport { QUESTION_TYPE, STEP_TYPE } from '../../lib/enums';\nimport { IAnswer }                  from '../../survey/IAnswer';\nimport { IQuestionData, IStepData } from '../../survey/IStepData';\nimport { Questionnaire }            from '../../survey/Questionnaire';\n\nexport abstract class Steps {\n  public static goToStep(step: string, props: IStepData): void {\n    props.wizard.goToStep(step);\n  }\n\n  public static goToNextStep(props: IStepData, questionnaire: Questionnaire): void {\n    Steps.goToStep(questionnaire.getNextStep(props), props);\n  }\n\n  public static goToPrevStep(props: IStepData, questionnaire: Questionnaire): void {\n    Steps.goToStep(questionnaire.getPreviousStep(props), props);\n  }\n\n  /**\n   * Determines whether the user should be allowed to continue\n   * @param props\n   * @returns\n   */\n  public static isNextEnabled(props: IStepData): boolean {\n    if (!props?.step) throw new Error('This survery is not defined');\n\n    if (props.stepId === STEP_TYPE.LANDING) return true;\n\n    if (props.stepId === STEP_TYPE.SUMMARY) return true;\n\n    if (!props.form) return false;\n    // KLUDGE Alert: this is not an elegant way to solve this\n    if (props.step?.type === QUESTION_TYPE.DOB) {\n      return undefined !== props.form?.age?.years && props.form.age.years >= 0;\n    }\n    return Steps.isValid(props.form, props.step.id);\n  }\n\n  public static isValid(form: IAnswer, question: string): boolean {\n    if (!form.answers[question]) return false;\n    const q       = form.answers[question];\n    const answers = values(q.answers);\n    switch (q.type) {\n      case STEP_TYPE.DOB:\n        return undefined !== form?.age?.years && form.age.years > 0;\n      case STEP_TYPE.MULTIPLE_CHOICE:\n        return q.answer !== undefined && answers?.indexOf(q.answer) !== -1;\n      // case STEP_TYPE.LANDING || STEP_TYPE.RESULTS || STEP_TYPE.SUMMARY:\n      //   return true;\n      default:\n        return true;\n    }\n  }\n\n  public static getFieldSetName(props: IQuestionData): string {\n    return kebabCase(props.step.title);\n  }\n\n  public static getDomId(answer: string, props: IQuestionData): string {\n    const name = Steps.getFieldSetName(props);\n    return `${name}-${kebabCase(answer)}`;\n  }\n}\n","import { Button }    from '@trussworks/react-uswds';\nimport { STEP_TYPE } from '../../lib/enums';\nimport { useGlobal } from '../../state/GlobalState';\nimport { IStepData } from '../../survey/IStepData';\n// eslint-disable-next-line import/no-cycle\nimport { Steps } from '../lib/Steps';\n\n/**\n * Generates the Previous/Next buttons for Wizard navigation\n * @param props\n * @returns\n */\nexport const Navbar = (props: IStepData): JSX.Element => {\n  const { questionnaire } = useGlobal();\n  const { step }          = props;\n  // We can go back only once past the Landing step and the first actual step.\n  // Once past Summary, back is disabled\n  const showPrevStep = props.stepId !== STEP_TYPE.LANDING\n    && props.stepId !== STEP_TYPE.RESULTS\n    && props.stepId !== STEP_TYPE.NO_RESULTS\n    && props.stepId !== questionnaire.flow[1];\n  // Results will be the last step; nothing follows\n  const showNextStep = props.stepId !== STEP_TYPE.RESULTS\n    && props.stepId !== STEP_TYPE.NO_RESULTS;\n\n  const backLabel = step?.buttons?.prev?.label || 'Previous';\n  const nextLabel = step?.buttons?.next?.label || 'Next';\n  const next      = () => Steps.goToNextStep(props, questionnaire);\n  const prev      = () => Steps.goToPrevStep(props, questionnaire);\n  const disabled  = () => !Steps.isNextEnabled(props);\n\n  return (\n    <nav className=\"wizard-layout__navbar\">\n      {/* Previous step */}\n      {showPrevStep && (\n        <Button\n          type=\"button\"\n          outline\n          onClick={prev}\n          data-testid={`prev-button-${props.stepId}`}\n        >\n          {backLabel}\n        </Button>\n      )}\n      {!showPrevStep && <div></div>}\n\n      {/* Forward step */}\n      {showNextStep && (\n        <Button\n          type=\"button\"\n          onClick={next}\n          disabled={disabled()}\n          data-testid={`next-button-${props.stepId}`}\n        >\n          {nextLabel}\n        </Button>\n      )}\n      {!showNextStep && <div></div>}\n    </nav>\n  );\n};\n","import { IStepData }          from '../../survey/IStepData';\nimport { QuestionableConfig } from '../../survey/Config';\nimport { noel }               from '../../lib/noop';\nimport { ACTION_TYPE }        from '../../lib/enums';\n\nexport abstract class Wizard {\n  public static getHeader(props: IStepData, config: QuestionableConfig): JSX.Element {\n    let text = props.step?.title;\n    if (!text) {\n      return noel();\n    }\n\n    if (config.showSteps) {\n      text = `${props.step?.id}: ${text}`;\n    }\n    return <h3 className=\"usa-card__heading\">{text}</h3>;\n  }\n\n  public static getSupportingDetails(props: IStepData): JSX.Element {\n    const text = props.step?.subTitle;\n    if (!text) {\n      return noel();\n    }\n    return <p className=\"font-sans-6\" dangerouslySetInnerHTML={{ __html: text }} />;\n  }\n\n  public static getQuestionHelp(props: IStepData): JSX.Element {\n    const text = props.step?.info;\n    if (!text) {\n      return noel();\n    }\n    return <p className=\"font-sans-6\">{text}</p>;\n  }\n\n  public static getFooter(props: IStepData): JSX.Element {\n    const text = props.step?.footer;\n    if (!text) {\n      return noel();\n    }\n    return <p className=\"font-sans-6\" dangerouslySetInnerHTML={{ __html: text }} />;\n  }\n\n  public static resetQuestionable(props: IStepData): void {\n    props.dispatchForm({\n      type: ACTION_TYPE.RESET,\n    });\n    props.wizard.goToStep('A');\n  }\n}\n","import {\n  Card, CardBody, CardFooter, CardGroup, CardHeader,\n} from '@trussworks/react-uswds';\nimport { IStepData } from '../../survey/IStepData';\nimport { Navbar }    from './Navbar';\nimport { Wizard }    from '../lib/Wizard';\nimport { useGlobal } from '../../state/GlobalState';\n\n/**\n * Generates the Card layout for each step's contents\n * @param props\n * @returns\n */\nexport const StepLayout = (props: IStepData): JSX.Element => {\n  const { config } = useGlobal();\n\n  return (\n    <div>\n      <section>\n        <CardGroup>\n          <Card\n            headerFirst\n            gridLayout={{ tablet: { col: 12 } }}\n            containerProps={{ className: 'border-ink' }}\n          >\n            <CardHeader className=\"bg-base-lightest\">\n              {Wizard.getHeader(props, config)}\n              {Wizard.getSupportingDetails(props)}\n              {Wizard.getQuestionHelp(props)}\n            </CardHeader>\n            <CardBody className=\"padding-top-3\">{props.children}</CardBody>\n            <CardFooter>\n              {Wizard.getFooter(props)}\n            </CardFooter>\n          </Card>\n        </CardGroup>\n      </section>\n      <Navbar {...props} />\n    </div>\n  );\n};\n","import { noel }       from '../../lib/noop';\nimport { IPageData }  from '../../survey/IStepData';\nimport { StepLayout } from '../wizard/StepLayout';\n\n/**\n * Generates the first page of the Wizard, \"aka Landing\"\n * @param props\n * @returns\n */\nexport const LandingPage = (props: IPageData): JSX.Element => {\n  const { step } = props;\n  if (!step) {\n    return noel();\n  }\n\n  return (\n    <StepLayout {...props}>\n      <p>{step.body}</p>\n    </StepLayout>\n  );\n};\n","import { noel }       from '../../lib/noop';\nimport { IPageData }  from '../../survey/IStepData';\nimport { StepLayout } from '../wizard/StepLayout';\n\n/**\n * Displays the wizard results\n * @param props\n * @returns\n */\nexport const NoResultsPage = (props: IPageData): JSX.Element => {\n  const { step: page } = props;\n  if (!page) {\n    return noel();\n  }\n\n  return (\n    <StepLayout {...props}>\n    </StepLayout>\n  );\n};\n","import { ReactNode }    from 'react';\nimport { IGlobalState } from '../../state/GlobalState';\nimport { IResult }      from '../../survey/IResult';\nimport { IStepData }    from '../../survey/IStepData';\n\n/**\n * Static utility methods for page components\n */\nexport abstract class Pages {\n  /**\n   * Internal method to compute reason for a result\n   * @param props\n   * @param result\n   * @returns\n   */\n  static getReason(props: IStepData, result: IResult, global: IGlobalState): string {\n    let reason                      = result.match?.explanation;\n    const { questionnaire, config } = global;\n\n    if (!reason) {\n      return '';\n    }\n\n    if (config?.dev && result.match) {\n      reason += '<br><br>';\n      if (\n        result.match.ageCalc !== undefined\n        || result.match.minAge !== undefined\n        || result.match.maxAge !== undefined\n      ) {\n        reason += `You are ${props.form.age?.years} years `;\n        reason += `and ${props.form.age?.months} months old. `;\n      }\n      Object.keys(result.match.answers).forEach((id) => {\n        const q = questionnaire.getQuestionById(id);\n        reason += `You answered \"<b>${q.answer}</b>\" to the question \"<i>${q.title}.</i>\" `;\n      });\n    }\n    return reason;\n  }\n\n  /**\n   * Internal method to generate list of results\n   * @param props\n   * @returns\n   */\n  static getResults(props: IStepData, global: IGlobalState): ReactNode {\n    const { questionnaire } = global;\n    return (questionnaire.getResults(props.form).map((result) => (\n      <li key={`${props.stepId}_${result.id}`} className=\"padding-bottom-2\">\n        <span>\n          {result.label}:{'  '}\n          <b>{result.name}</b>\n        </span>\n        <div\n          className=\"text-light\"\n          dangerouslySetInnerHTML={{ __html: Pages.getReason(props, result, global) }}\n        />\n      </li>\n    )));\n  }\n}\n","import { DateTime } from 'luxon';\nimport moment       from 'moment';\nimport { TAge }     from './types';\n\n/**\n * Determines if a string can be parsed into a valid Date\n * @param dt\n * @returns\n */\nexport const isValidDate = (dt: string | undefined): boolean => {\n  if (!dt || dt.length < 8) return false;\n  if (!moment(dt, 'MM/DD/YYYY', true).isValid()) return false;\n  return true;\n};\n\n/**\n * Gets a luxon DateTime object from a date string\n * @param dt DateTime as string- should always be in the format `MM/DD/YYYY`\n * @returns DateTime or undefined\n */\nexport const getDateTime = (dt: string): DateTime | undefined => {\n  if (!isValidDate(dt)) return undefined;\n  const date = new Date(\n    +dt.substring(6, 10),\n    +dt.substring(0, 2) - 1,\n    +dt.substring(3, 5),\n  );\n  return DateTime.fromJSDate(date);\n};\n\n/**\n * Gets an age from a DateTime object\n * @param dob - luxon DateTime\n * @returns an age with years, months, days\n */\nexport const getDateTimeAge = (dob: DateTime): TAge => {\n  const now = DateTime.now();\n\n  const yearNow  = now.year;\n  const monthNow = now.month;\n  const dateNow  = now.day;\n\n  const yearDob  = dob.year;\n  const monthDob = dob.month;\n  const dateDob  = dob.day;\n\n  let years  = yearNow - yearDob;\n  let months = 0;\n\n  if (monthNow >= monthDob) {\n    months = monthNow - monthDob;\n  } else {\n    years -= 1;\n    months = 12 + monthNow - monthDob;\n  }\n\n  let days = 0;\n  if (dateNow >= dateDob) {\n    days = dateNow - dateDob;\n  } else {\n    // eslint-disable-next-line no-multi-spaces\n    days    = 31 + dateNow - dateDob;\n    months += -1;\n    if (months < 0) {\n      months = 11;\n      years -= 1;\n    }\n  }\n\n  return {\n    days,\n    months,\n    years,\n  };\n};\n\n/**\n * Parses a date/time string and returns an Age object\n * @param dateOfBirth - should always be in the format `MM/DD/YYYY`\n * @returns an age, if the date is valid\n */\nexport const getAge = (dateOfBirth: string | undefined): TAge | undefined => {\n  if (!dateOfBirth || !isValidDate(dateOfBirth)) return undefined;\n\n  const dob = getDateTime(dateOfBirth);\n  if (!dob) return undefined;\n\n  return getDateTimeAge(dob);\n};\n","/* eslint-disable no-param-reassign */\nimport { Checkbox, Fieldset, Radio } from '@trussworks/react-uswds';\nimport { DateTime }                  from 'luxon';\nimport { ACTION_TYPE }               from '../../lib/enums';\nimport { IQuestionData }             from '../../survey/IStepData';\nimport { Steps }                     from './Steps';\nimport { getDateTime }               from '../../lib/date';\nimport { TDateOfBirth }              from '../../lib/types';\n\n/**\n * Static utility methods for question components\n */\nexport abstract class Questions {\n  /**\n   * Updates the form with the current selected answer(s)\n   * @param answer\n   * @param props\n   * @returns\n   */\n  private static updateForm(answer: string, props: IQuestionData): void {\n    Object.assign(props.step, { answer });\n    const value = {\n      answers: {\n        [props.step.id]: props.step,\n      },\n    };\n    return props.dispatchForm({\n      type: ACTION_TYPE.UPDATE,\n      value,\n    });\n  }\n\n  /**\n   * Generates a radio button given a question definition\n   * @param answer\n   * @param props\n   * @returns\n   */\n  private static getRadio(answer: string, props: IQuestionData): JSX.Element {\n    const handler = () => Questions.updateForm(answer, props);\n    const id      = Steps.getDomId(answer, props);\n\n    return (\n      <Radio\n        id={id}\n        key={id}\n        name={Steps.getFieldSetName(props)}\n        label={answer}\n        value={answer}\n        checked={Questions.isSelected(answer, props) === true}\n        className={'multipleChoice'}\n        onChange={handler}\n        onClick={handler}\n      />\n    );\n  }\n\n  /**\n   * Determines if the answer is valid and selected\n   * @param answer\n   * @param props\n   * @returns\n   */\n  private static isSelected(answer: string, props: IQuestionData): boolean | undefined {\n    if (!props?.form) {\n      return undefined;\n    }\n    const q = props.form.answers[props.step.id];\n    return Steps.isValid(props.form, props.step.id) && q.answer === answer;\n  }\n\n  /**\n   * Gets a collection of radio buttons\n   * @param props\n   * @returns\n   */\n  public static getRadios(props: IQuestionData): JSX.Element {\n    return (<Fieldset\n      legend={props.step.title}\n      className=\"multipleChoice\"\n      legendStyle=\"srOnly\"\n    >\n      {\n        Object.keys(props.step.answers).map((a) =>\n          Questions.getRadio(props.step.answers[+a], props))\n      }\n    </Fieldset>);\n  }\n\n  /**\n   * Generates a checkbox given a question definition\n   * @param answer\n   * @param props\n   * @returns\n   */\n  private static getCheckbox(answer: string, props: IQuestionData): JSX.Element {\n    const handler = () => Questions.updateForm(answer, props);\n    const id      = Steps.getDomId(answer, props);\n\n    return (\n      <Checkbox\n        id={id}\n        key={id}\n        name={Steps.getFieldSetName(props)}\n        label={answer}\n        value={answer}\n        checked={Questions.isSelected(answer, props) === true}\n        className={'multipleSelect'}\n        onChange={handler}\n        onClick={handler}\n      />\n    );\n  }\n\n  /**\n * Gets a collection of checkboxes\n * @param props\n * @returns\n */\n  public static getCheckboxes(props: IQuestionData): JSX.Element {\n    return (\n      <Fieldset\n        legend={props.step.title}\n        className=\"multipleChoice\"\n        legendStyle=\"srOnly\"\n      >\n      {\n        Object.keys(props.step.answers).map((a) =>\n          Questions.getCheckbox(props.step.answers[+a], props))\n      }\n      </Fieldset>\n    );\n  }\n\n  /**\n   * Gets a birthdate's DateTime from a form\n   * @param props\n   * @returns\n   */\n  public static getBirthdate(props: IQuestionData): DateTime | undefined {\n    if (props.form?.birthdate) {\n      return getDateTime(props.form.birthdate);\n    }\n    return undefined;\n  }\n\n  /**\n   * Converts a Date of Birth type into a string\n   * @param dob\n   * @returns\n   */\n  public static toBirthdate(dob: TDateOfBirth): string | undefined {\n    if (dob.month && dob.day && dob.year) {\n      return `${dob.month.padStart(2, '0')}/${dob.day.padStart(2, '0')}/${\n        dob.year\n      }`;\n    }\n    return undefined;\n  }\n}\n","import { SummaryBox } from '@trussworks/react-uswds';\nimport { IPageData }  from '../../survey/IStepData';\nimport { StepLayout } from '../wizard/StepLayout';\nimport { Pages }      from '../lib';\nimport { useGlobal }  from '../../state/GlobalState';\nimport { noel }       from '../../lib/noop';\n\n/**\n * Displays the wizard results\n * @param props\n * @returns\n */\nexport const ResultsPage = (props: IPageData): JSX.Element => {\n  const { step }          = props;\n  const global            = useGlobal();\n  const { questionnaire } = global;\n\n  if (!step) {\n    return noel();\n  }\n\n  const action = questionnaire.getAction();\n\n  return (\n    <StepLayout {...props}>\n      <SummaryBox heading={step.bodyHeader || ''} style={{ paddingTop: '20px' }}>\n        <p>{step.bodySubHeader}</p>\n        <ul\n          className=\"usa-list usa-list--unstyled\"\n          style={{ textAlign: 'left' }}\n        >\n          {Pages.getResults(props, global)}\n        </ul>\n        <p dangerouslySetInnerHTML={{ __html: step?.body || '' }} />\n        <h2>{action.title}</h2>\n        <p>{action.description}</p>\n        <p dangerouslySetInnerHTML={{ __html: action.action }} />.\n      </SummaryBox>\n    </StepLayout>\n  );\n};\n","import { ReactNode }  from 'react';\nimport { noel }       from '../../lib/noop';\nimport { IPageData }  from '../../survey/IStepData';\nimport { StepLayout } from '../wizard/StepLayout';\n\n/**\n * Internal method to generate a list of the survey answers\n * @param props\n * @returns\n */\nconst getAnswers = (props: IPageData): ReactNode => {\n  const answers = Object.keys(props.form.answers).map((key) => (\n    <li key={key} className=\"padding-bottom-2\">\n      <span className=\"text-light\">\n        {props.form.answers[key].title}:&nbsp;&nbsp;\n        <b>{props.form.answers[key].answer}</b>\n      </span>\n    </li>\n  ));\n\n  return <ul className=\"usa-list usa-list--unstyled\">{answers}</ul>;\n};\n\n/**\n * Displays a summary of the wizard prior to showing results\n * @param props\n * @returns\n */\nexport const SummaryPage = (props: IPageData): JSX.Element => {\n  const { step: page } = props;\n  if (!page) {\n    return noel();\n  }\n\n  return <StepLayout {...props}>{getAnswers(props)}</StepLayout>;\n};\n","import { DateInput, DateInputGroup } from '@trussworks/react-uswds';\nimport { capitalize }                from 'lodash';\nimport { ChangeEvent, useState }     from 'react';\nimport { getAge }                    from '../../lib/date';\nimport { ACTION_TYPE, DATE_UNIT }    from '../../lib/enums';\nimport { noel }                      from '../../lib/noop';\nimport { TDateOfBirth }              from '../../lib/types';\nimport { IQuestionData }             from '../../survey/IStepData';\nimport { Questions }                 from '../lib/Questions';\nimport { Steps }                     from '../lib/Steps';\nimport { StepLayout }                from '../wizard/StepLayout';\n\nexport const DateOfBirth = (props: IQuestionData): JSX.Element => {\n  const { step }          = props;\n  const dob: TDateOfBirth = {\n    day:   Questions.getBirthdate(props)?.day?.toString(),\n    month: Questions.getBirthdate(props)?.month?.toString(),\n    year:  Questions.getBirthdate(props)?.year?.toString(),\n  };\n  const [state, setState] = useState(dob);\n\n  if (!step) {\n    return noel();\n  }\n\n  const onDateOfBirthChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    unit: DATE_UNIT,\n  ): void => {\n    const val = e.target.value;\n    if (!val) {\n      return;\n    }\n    state[unit] = val;\n    setState({\n      ...state,\n    });\n    const bd  = Questions.toBirthdate(state);\n    const age = getAge(bd);\n    if (age) {\n      props.dispatchForm({\n        type:  ACTION_TYPE.UPDATE,\n        value: {\n          age,\n          birthdate: bd,\n        },\n      });\n    }\n  };\n\n  const getDateInput = (\n    unit: DATE_UNIT,\n    label: string,\n  ): JSX.Element => {\n    let length = 2;\n    if (unit === DATE_UNIT.YEAR) {\n      length = 4;\n    }\n    return (\n      <DateInput\n        id={Steps.getDomId(unit, props)}\n        name={label}\n        label={capitalize(unit)}\n        unit={unit}\n        maxLength={length}\n        minLength={length}\n        defaultValue={state[unit]}\n        onChange={(e) => onDateOfBirthChange(e, unit)}\n      />);\n  };\n\n  const getDateInputGroup = (label: string): JSX.Element => (\n    <DateInputGroup>\n      {getDateInput(DATE_UNIT.MONTH, label)}\n      {getDateInput(DATE_UNIT.DAY, label)}\n      {getDateInput(DATE_UNIT.YEAR, label)}\n    </DateInputGroup>\n  );\n\n  return getDateInputGroup('date_of_birth');\n};\n\nexport const DateOfBirthStep = (props: IQuestionData): JSX.Element => (\n  <StepLayout {...props}>\n    <DateOfBirth {...props} />\n  </StepLayout>\n);\n","import { noel }          from '../../lib/noop';\nimport { IQuestionData } from '../../survey/IStepData';\nimport { Questions }     from '../lib/Questions';\nimport { StepLayout }    from '../wizard/StepLayout';\n\n/**\n * Renders a question and a radio list of allowed answers\n * @param props\n * @returns\n */\nexport const MultipleChoice = (props: IQuestionData): JSX.Element => {\n  if (props?.step?.answers === undefined) {\n    return noel('Question and answer are not defined');\n  }\n  return Questions.getRadios(props);\n};\n\n/**\n * Renders a question and a radio list of allowed answers\n * @param props\n * @returns\n */\nexport const MultipleChoiceStep = (props: IQuestionData): JSX.Element => (\n  <StepLayout {...props}>\n    <MultipleChoice {...props} />\n  </StepLayout>\n);\n","import { noel }          from '../../lib/noop';\nimport { IQuestionData } from '../../survey/IStepData';\nimport { Questions }     from '../lib/Questions';\nimport { StepLayout }    from '../wizard/StepLayout';\n\n/**\n * Renders a question and a radio list of allowed answers\n * @param props\n * @returns\n */\nexport const MultipleSelect = (props: IQuestionData): JSX.Element => {\n  if (props?.step?.answers === undefined) {\n    return noel();\n  }\n\n  return Questions.getCheckboxes(props);\n};\n\n/**\n * Renders a question and a radio list of allowed answers\n * @param props\n * @returns\n */\nexport const MultipleSelectStep = (props: IQuestionData): JSX.Element => (\n  <StepLayout {...props}>\n    <MultipleSelect {...props} />\n  </StepLayout>\n);\n","import {\n  isEnum, QUESTION_TYPE,\n} from '../../lib/enums';\nimport { noel }                     from '../../lib/noop';\nimport { useGlobal }                from '../../state/GlobalState';\nimport { IQuestionData, IStepData } from '../../survey/IStepData';\nimport {\n  DateOfBirthStep,\n  MultipleChoiceStep,\n  MultipleSelectStep,\n} from '../questions';\n\n/**\n * Given a step of a known question type, generates a question component\n * @param props\n * @returns\n */\nexport const QuestionFactory = (props: IStepData): JSX.Element => {\n  const { stepId }        = props;\n  const { questionnaire } = useGlobal();\n  const step              = questionnaire.getStepById(`${stepId}`);\n\n  if (!isEnum(QUESTION_TYPE, step.type)) {\n    return noel('Not a question');\n  }\n  const question = questionnaire.getQuestionById(step.id);\n  const stepData = { ...{ step: question, ...props } } as IQuestionData;\n  switch (question.type) {\n    case QUESTION_TYPE.DOB:\n      return <DateOfBirthStep {...stepData} />;\n    case QUESTION_TYPE.MULTIPLE_CHOICE:\n      return <MultipleChoiceStep {...stepData} />;\n    case QUESTION_TYPE.MULTIPLE_SELECT:\n      return <MultipleSelectStep {...stepData} />;\n    default:\n      return noel('Question does not exist', 'QuestionFactory');\n  }\n};\n","import {\n  isEnum, PAGE_TYPE, QUESTION_TYPE,\n} from '../../lib/enums';\nimport { noel }            from '../../lib/noop';\nimport { useGlobal }       from '../../state/GlobalState';\nimport { IStepData }       from '../../survey/IStepData';\nimport { PageFactory }     from './PageFactory';\nimport { QuestionFactory } from './QuestionFactory';\n\n/**\n * Core UI factory for generating steps\n * @param props\n * @returns\n */\nexport const StepFactory = (props: IStepData): JSX.Element => {\n  const { stepId }        = props;\n  const { questionnaire } = useGlobal();\n  const step              = questionnaire.getStepById(`${stepId}`);\n\n  if (isEnum(QUESTION_TYPE, step.type)) {\n    return QuestionFactory(props);\n  }\n  if (isEnum(PAGE_TYPE, step.type)) {\n    return PageFactory(props);\n  }\n  return noel('Step does not exist', 'StepFactory');\n};\n","import {\n  isEnum, PAGE_TYPE,\n} from '../../lib/enums';\nimport { noel }                 from '../../lib/noop';\nimport { useGlobal }            from '../../state/GlobalState';\nimport { IPageData, IStepData } from '../../survey/IStepData';\nimport {\n  LandingPage,\n  NoResultsPage,\n  ResultsPage,\n  SummaryPage,\n} from '../pages';\n\n/**\n * Given a step of a known page type, returns a page component\n * @param props\n * @returns\n */\nexport const PageFactory = (props: IStepData): JSX.Element => {\n  const { stepId }        = props;\n  const { questionnaire } = useGlobal();\n  const step              = questionnaire.getStepById(`${stepId}`);\n  if (!isEnum(PAGE_TYPE, step.type)) {\n    return noel('Not a page');\n  }\n  const page     = questionnaire.getPageById(step.id);\n  const stepData = { ...{ step: page, ...props } } as IPageData;\n  switch (page.type) {\n    case PAGE_TYPE.LANDING:\n      return <LandingPage {...stepData} />;\n    case PAGE_TYPE.NO_RESULTS:\n      return <NoResultsPage {...stepData} />;\n    case PAGE_TYPE.RESULTS:\n      return <ResultsPage {...stepData} />;\n    case PAGE_TYPE.SUMMARY:\n      return <SummaryPage {...stepData} />;\n    default:\n      return noel('Page does not exist', 'PageFactory');\n  }\n};\n","import { Accordion, Button } from '@trussworks/react-uswds';\nimport { noel }              from '../../lib/noop';\nimport { useGlobal }         from '../../state/GlobalState';\nimport { IStepData }         from '../../survey/IStepData';\nimport { Wizard }            from '../lib/Wizard';\n\nexport const DevPanel = (props: IStepData): JSX.Element => {\n  const { config } = useGlobal();\n\n  if (!config.dev) {\n    return noel();\n  }\n\n  const reset = () => Wizard.resetQuestionable(props);\n\n  return (\n    <>\n      <Accordion\n        items={[\n          {\n            content: (\n              <pre>\n                <code>{JSON.stringify(props.form, null, 4)}</code>\n              </pre>\n            ),\n            expanded: false,\n            id:       'developer-output',\n            title:    'Temporary developer panel',\n          },\n        ]}\n      />\n      <br></br>\n      <nav className=\"wizard-layout__navbar\">\n        <Button type=\"reset\" secondary onClick={reset}>\n          Reset\n        </Button>\n      </nav>\n    </>\n  );\n};\n","import { StepIndicator, StepIndicatorStep } from '@trussworks/react-uswds';\nimport { useGlobal }                        from '../../state/GlobalState';\nimport { IStepData }                        from '../../survey/IStepData';\nimport { ISection }                         from '../../survey/ISection';\nimport { noel }                             from '../../lib/noop';\n\nconst getIndicatorStep = (s: ISection) => (\n    <StepIndicatorStep key={s.id} label={s.name} status={s.status} />\n);\n\nexport const ProgressBar = (props: IStepData): JSX.Element => {\n  const { questionnaire } = useGlobal();\n\n  const sections = questionnaire.getSections(props);\n  if (sections.length === 0) {\n    return noel();\n  }\n\n  return (\n    <StepIndicator centered counters=\"small\">\n      {questionnaire.getSections(props).map(getIndicatorStep)}\n    </StepIndicator>\n  );\n};\n","import { useReducer }                         from 'react';\nimport { useWizard }                          from 'use-wizard';\nimport { stepReducer }                        from '../state/stepReducer';\nimport { Answer }                             from '../survey/Answer';\nimport { StepFactory }                        from './wizard/StepFactory';\nimport { DevPanel }                           from './wizard/DevPanel';\nimport { ProgressBar }                        from './wizard/ProgressBar';\nimport { GlobalStateProvider, IQuestionable } from '../state/GlobalState';\n\nexport const Questionable = (q: IQuestionable): JSX.Element => {\n  const { questionnaire } = q;\n  if (!questionnaire) {\n    throw new Error('questionable is undefined');\n  }\n\n  const [step, wizard] = useWizard(questionnaire.flow);\n\n  // This is only used to store user inputs\n  const [form, dispatchForm] = useReducer(stepReducer, new Answer());\n  return (\n    <GlobalStateProvider value={q}>\n      {/*\n      // Remove header for now\n      <Header basic>\n        <div className=\"usa-nav-container\">\n          <div className=\"usa-navbar\">\n            <Title id=\"basic-logo\">\n              <a href=\"/\" title=\"Home\" aria-label=\"Home\">\n                {questionnaire.header}\n              </a>\n            </Title>\n          </div>\n        </div>\n      </Header> */}\n\n      <section>\n        <ProgressBar\n          {...{\n            dispatchForm,\n            form,\n            stepId: step,\n            wizard,\n          }}\n        ></ProgressBar>\n      </section>\n\n      <section className=\"section\">\n        <StepFactory\n          {...{\n            dispatchForm,\n            form,\n            stepId: step,\n            wizard,\n          }}\n        />\n      </section>\n\n      <section className=\"section\">\n        <DevPanel\n          {...{\n            dispatchForm,\n            form,\n            stepId: step,\n            wizard,\n          }}\n        />\n      </section>\n    </GlobalStateProvider>\n  );\n};\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","n","Object","prototype","toString","slice","constructor","name","from","test","unsupportedIterableToArray","TypeError","nonIterableRest","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","QUESTION_TYPE","PAGE_TYPE","DIRECTION","PROGRESS_BAR_STATUS","ACTION","ACTION_TYPE","DATE_UNIT","MODE","STEP_TYPE","isEnum","enm","values","includes","_classCallCheck","instance","Constructor","Answer","form","assign","this","started","Date","stepReducer","previousState","action","type","RESET","UPDATE","merge","log","params","console","noel","message","context","_jsx","_Fragment","children","GlobalStateContext","createContext","setState","state","useGlobalState","useContext","Error","GlobalStateProvider","useState","Provider","useQuestionnaire","questionnaire","useConfig","config","useGlobal","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","Steps","step","wizard","goToStep","getNextStep","getPreviousStep","stepId","LANDING","SUMMARY","DOB","undefined","_props$form","age","_props$form$age","years","isValid","id","question","answers","q","_form$age","MULTIPLE_CHOICE","answer","indexOf","kebabCase","title","getFieldSetName","Navbar","showPrevStep","RESULTS","NO_RESULTS","flow","showNextStep","backLabel","buttons","prev","label","nextLabel","_jsxs","className","Button","outline","onClick","goToPrevStep","goToNextStep","disabled","isNextEnabled","Wizard","text","_props$step","showSteps","_props$step2","_props$step3","subTitle","dangerouslySetInnerHTML","__html","_props$step4","info","_props$step5","footer","dispatchForm","StepLayout","CardGroup","Card","headerFirst","gridLayout","tablet","col","containerProps","CardHeader","getHeader","getSupportingDetails","getQuestionHelp","CardBody","CardFooter","getFooter","LandingPage","body","NoResultsPage","Pages","result","global","reason","match","_result$match","explanation","dev","ageCalc","minAge","maxAge","_props$form$age2","months","keys","forEach","getQuestionById","getResults","map","getReason","isValidDate","dt","moment","getDateTime","date","substring","DateTime","fromJSDate","getAge","dateOfBirth","dob","now","yearNow","year","monthNow","month","dateNow","day","yearDob","monthDob","dateDob","days","getDateTimeAge","Questions","handler","updateForm","getDomId","Radio","checked","isSelected","onChange","Fieldset","legend","legendStyle","a","getRadio","Checkbox","getCheckbox","birthdate","padStart","ResultsPage","getAction","SummaryBox","heading","bodyHeader","style","paddingTop","bodySubHeader","textAlign","description","getAnswers","SummaryPage","DateOfBirth","getBirthdate","_Questions$getBirthda","_Questions$getBirthda2","_Questions$getBirthda3","_Questions$getBirthda4","_Questions$getBirthda5","_Questions$getBirthda6","onDateOfBirthChange","e","unit","val","bd","toBirthdate","getDateInput","YEAR","DateInput","capitalize","maxLength","minLength","defaultValue","DateInputGroup","MONTH","DAY","DateOfBirthStep","MultipleChoice","getRadios","MultipleChoiceStep","MultipleSelect","getCheckboxes","MultipleSelectStep","StepFactory","getStepById","stepData","MULTIPLE_SELECT","QuestionFactory","page","getPageById","PageFactory","DevPanel","Accordion","items","content","JSON","stringify","expanded","secondary","resetQuestionable","getIndicatorStep","s","StepIndicatorStep","status","ProgressBar","getSections","StepIndicator","centered","counters","Questionable","useWizard","useReducer"],"mappings":"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"}