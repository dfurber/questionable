{"version":3,"file":"index.esm.js","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../src/lib/enums.ts","../src/composable/Answer.ts","../src/state/GlobalState.tsx","../src/state/stepReducer.ts","../src/lib/date.ts","../src/lib/defaultPages.ts","../node_modules/@babel/runtime/helpers/esm/createClass.js","../src/lib/helpers.ts","../src/lib/log.ts","../src/lib/noop.tsx","../src/components/lib/Wizard.tsx","../src/components/wizard/DevPanel.tsx","../src/components/wizard/ProgressBar.tsx","../src/components/wizard/StepIndicator.tsx","../src/components/factories/ProgressFactory.tsx","../src/schema/index.ts","../src/schema/editStepSchema.ts","../src/components/lib/Pages.tsx","../src/components/lib/Steps.tsx","../src/components/lib/Questions.tsx","../src/components/wizard/Button.tsx","../src/components/wizard/NavBar.tsx","../src/components/wizard/DesignLayout.tsx","../src/components/design/Edit.tsx","../src/components/wizard/StepLayout.tsx","../src/components/pages/LandingPage.tsx","../src/components/pages/NoResultsPage.tsx","../src/components/pages/ResultsPage.tsx","../src/components/pages/SummaryPage.tsx","../src/components/questions/DateOfBirth.tsx","../src/components/questions/MultiSelect.tsx","../src/components/questions/MultipleChoice.tsx","../src/components/factories/QuestionFactory.tsx","../src/components/factories/StepFactory.tsx","../src/components/factories/PageFactory.tsx","../src/components/factories/DesignFactory.tsx","../src/components/Questionable.tsx","../node_modules/@babel/runtime/helpers/esm/classExtractFieldDescriptor.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js","../node_modules/@babel/runtime/helpers/esm/classApplyDescriptorSet.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js","../node_modules/@babel/runtime/helpers/esm/classApplyDescriptorGet.js","../src/composable/Config.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/tslib/tslib.es6.js","../src/composable/Questionnaire.ts"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/**\n * Defines the known component types for questions\n */\nexport enum QUESTION_TYPE {\n  DOB = 'dob',\n  MULTIPLE_CHOICE = 'multiple_choice',\n  MULTIPLE_SELECT = 'multiple_select',\n}\n\n/**\n * Defines the known component types for pages\n */\nexport enum PAGE_TYPE {\n  LANDING = 'Landing',\n  NO_RESULTS = 'No Results',\n  RESULTS = 'Results',\n  SUMMARY = 'Summary',\n}\n\n/**\n * Defines the known component types for design\n */\nexport enum DESIGN_TYPE {\n  EDIT = 'Edit',\n}\n\n/**\n * Defines the type of step for UI rendering\n */\nexport const STEP_TYPE = { ...PAGE_TYPE, ...QUESTION_TYPE, ...DESIGN_TYPE };\nexport type TStepType = PAGE_TYPE | QUESTION_TYPE | DESIGN_TYPE;\n\n/**\n * Navigation direction for steps by array index (+1 or -1)\n */\nexport enum DIRECTION {\n  FORWARD = 1,\n  BACKWARD = -1,\n}\n\n/**\n * Progress Bar status\n */\nexport enum PROGRESS_BAR_STATUS {\n  COMPLETE = 'complete',\n  CURRENT = 'current',\n  INCOMPLETE = 'incomplete',\n}\n\nexport enum ACTION {\n  CALL = 'call',\n  HYBRID = 'hybrid',\n  ONLINE = 'online',\n}\n\nexport enum ACTION_TYPE {\n  RESET = 'RESET',\n  UPDATE = 'UPDATE',\n}\n\nexport enum DATE_UNIT {\n  DAY = 'day',\n  MONTH = 'month',\n  YEAR = 'year',\n}\n\nexport enum MODE {\n  DEV = 'dev',\n  EDIT = 'edit',\n  VIEW = 'view',\n}\n\nexport enum CSS_CLASS {\n  BASE = 'usds-q',\n  DEV_PANEL_SECTION = 'usds-q-dev-panel',\n  DOB = 'usds-q-dob',\n  MULTI_CHOICE = 'usds-q-multi-choice',\n  MULTI_CHOICE_GROUP = 'usds-q-multi-choice-group',\n  MULTI_SELECT = 'usds-q-multi-select',\n  MULTI_SELECT_GROUP = 'usds-q-multi-select-group',\n  NAVBAR = 'usds-q-navbar',\n  NAVBAR_BUTTON = 'usds-q-navbar-button',\n  PROGRESS_BAR = 'usds-q-progress-bar',\n  PROGRESS_BAR_BOTTOM_SECTION = 'usds-q-progress-bar-bottom-section',\n  PROGRESS_BAR_TOP_SECTION = 'usds-q-progress-bar-top-section',\n  RESULTS_SUMMARY_BOX = 'usds-q-results-summary-box',\n  RESULTS_SUMMARY_HEADER = 'usds-q-results-summary-header',\n  STEP_FOOTER = 'usds-q-step-footer',\n  STEP_HEADER = 'usds-q-step-header',\n  STEP_INFO = 'usds-q-step-info',\n  STEP_LAYOUT = 'usds-q-step-layout',\n  STEP_LAYOUT_SECTION = 'usds-q-step-layout-section',\n  STEP_SUBTITLE = 'usds-q-step-subtitle',\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isEnum = (enm: object, value: string): boolean =>\n  Object.values(enm).includes(value);\n","import { TAge }      from '../lib/types';\nimport { IForm }     from '../survey/IForm';\nimport { IQuestion } from '../survey/IStep';\n\nexport class Answer implements IForm {\n  public readonly started: Date;\n\n  finished?: Date;\n\n  public birthdate?: string;\n\n  public age?: TAge;\n\n  public responses: IQuestion[] = [];\n\n  constructor(form: Partial<Answer> = {}) {\n    Object.assign(this, form);\n    this.started = new Date();\n  }\n}\n","import React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useContext,\n  useState,\n} from 'react';\nimport { QuestionableConfig } from '../composable/Config';\nimport { Questionnaire }      from '../composable/Questionnaire';\n\nexport interface IQuestionable {\n  config?: QuestionableConfig;\n  questionnaire?: Questionnaire;\n}\n\nconst GlobalStateContext = createContext({\n  setState: {} as Dispatch<SetStateAction<Partial<IQuestionable>>>,\n  state:    {} as Partial<IQuestionable>,\n});\n\ntype TGlobalStateContext = {\n  setState: React.Dispatch<React.SetStateAction<Partial<IQuestionable>>>;\n  state: Partial<IQuestionable>;\n};\n\nconst useGlobalState = (): TGlobalStateContext => {\n  const context = useContext(GlobalStateContext);\n  if (!context) {\n    throw new Error('useGlobalState must be used within a GlobalStateContext');\n  }\n  return context;\n};\n\nexport const GlobalStateProvider = ({\n  children,\n  value = {} as IQuestionable,\n}: {\n  children: React.ReactNode;\n  value?: Partial<IQuestionable>;\n}): JSX.Element => {\n  const [state, setState] = useState(value);\n  return (\n    <GlobalStateContext.Provider value={{ setState, state }}>\n      {children}\n    </GlobalStateContext.Provider>\n  );\n};\n\nconst useQuestionnaire = (): Questionnaire => {\n  const { questionnaire } = useGlobalState().state;\n\n  if (!questionnaire) {\n    throw new Error('useQuestionnaire has no data');\n  }\n  return questionnaire;\n};\n\nconst useConfig = (): QuestionableConfig => {\n  const { config } = useGlobalState().state;\n\n  if (!config) {\n    throw new Error('useConfig has no data');\n  }\n  return config;\n};\n\nexport interface IGlobalState {\n  config: QuestionableConfig;\n  questionnaire: Questionnaire;\n}\n\nexport const useGlobal = (): IGlobalState => ({\n  config:        useConfig(),\n  questionnaire: useQuestionnaire(),\n});\n","import { merge }       from 'lodash';\nimport { ACTION_TYPE } from '../lib/enums';\nimport { IForm }       from '../survey/IForm';\nimport { Answer }      from '../composable/Answer';\n\n/**\n * Merges the form's answer state as the user progresses through the survey\n * @param previousState\n * @param action\n * @returns\n */\nexport const stepReducer = (\n  previousState: IForm,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  action: { type: ACTION_TYPE; value: any },\n): IForm => {\n  // Action should never be null,\n  // except when we attempt to storybook/test individual components in isolation\n  switch (action?.type) {\n    case ACTION_TYPE.RESET:\n      return new Answer();\n\n    case ACTION_TYPE.UPDATE:\n      return merge(\n        {\n          ...previousState,\n        },\n        {\n          ...action.value,\n        },\n      );\n\n    default:\n      return previousState;\n  }\n};\n","import { DateTime } from 'luxon';\nimport { TAge }     from './types';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst moment = require('moment');\n\n/**\n * Determines if a string can be parsed into a valid Date\n * @param dt\n * @returns\n */\nexport const isValidDate = (dt: string | undefined): boolean => {\n  if (!dt || dt.length < 8) return false;\n  if (!moment(dt, 'MM/DD/YYYY', true).isValid()) return false;\n  return true;\n};\n\n/**\n * Gets a luxon DateTime object from a date string\n * @param dt DateTime as string- should always be in the format `MM/DD/YYYY`\n * @returns DateTime or undefined\n */\nexport const getDateTime = (dt: string): DateTime | undefined => {\n  if (!isValidDate(dt)) return undefined;\n  const date = new Date(\n    +dt.substring(6, 10),\n    +dt.substring(0, 2) - 1,\n    +dt.substring(3, 5),\n  );\n  return DateTime.fromJSDate(date);\n};\n\n/**\n * Gets an age from a DateTime object\n * @param dob - luxon DateTime\n * @returns an age with years, months, days\n */\nexport const getDateTimeAge = (dob: DateTime): TAge => {\n  const now = DateTime.now();\n\n  const yearNow  = now.year;\n  const monthNow = now.month;\n  const dateNow  = now.day;\n\n  const yearDob  = dob.year;\n  const monthDob = dob.month;\n  const dateDob  = dob.day;\n\n  let years  = yearNow - yearDob;\n  let months = 0;\n\n  if (monthNow >= monthDob) {\n    months = monthNow - monthDob;\n  } else {\n    years -= 1;\n    months = 12 + monthNow - monthDob;\n  }\n\n  let days = 0;\n  if (dateNow >= dateDob) {\n    days = dateNow - dateDob;\n  } else {\n    // eslint-disable-next-line no-multi-spaces\n    days    = 31 + dateNow - dateDob;\n    months += -1;\n    if (months < 0) {\n      months = 11;\n      years -= 1;\n    }\n  }\n\n  return {\n    days,\n    months,\n    years,\n  };\n};\n\n/**\n * Parses a date/time string and returns an Age object\n * @param dateOfBirth - should always be in the format `MM/DD/YYYY`\n * @returns an age, if the date is valid\n */\nexport const getAge = (dateOfBirth: string | undefined): TAge | undefined => {\n  if (!dateOfBirth || !isValidDate(dateOfBirth)) return undefined;\n\n  const dob = getDateTime(dateOfBirth);\n  if (!dob) return undefined;\n\n  return getDateTimeAge(dob);\n};\n","import { IPage }     from '../survey/IStep';\nimport { IPages }    from '../survey/IPages';\nimport { PAGE_TYPE } from './enums';\n\n/**\n * Default landing step if none is defined\n */\nconst landingPage: IPage = {\n  buttons: {\n    next: {\n      label: 'Get Started',\n    },\n  },\n  id:      PAGE_TYPE.LANDING,\n  section: { id: PAGE_TYPE.LANDING },\n  title:   PAGE_TYPE.LANDING,\n  type:    PAGE_TYPE.LANDING,\n};\n\n/**\n * Default result step if none is defined\n */\nconst resultsPage: IPage = {\n  id:      PAGE_TYPE.RESULTS,\n  section: { id: PAGE_TYPE.RESULTS },\n  title:   PAGE_TYPE.RESULTS,\n  type:    PAGE_TYPE.RESULTS,\n};\n\n/**\n * Default no results step if none is defined\n */\nconst noResultsPage: IPage = {\n  id:      PAGE_TYPE.NO_RESULTS,\n  section: { id: PAGE_TYPE.RESULTS },\n  title:   PAGE_TYPE.NO_RESULTS,\n  type:    PAGE_TYPE.NO_RESULTS,\n};\n\n/**\n * Default result step if none is defined\n */\nconst summaryPage: IPage = {\n  buttons: {\n    next: {\n      label: 'Submit',\n    },\n  },\n  id:      PAGE_TYPE.SUMMARY,\n  section: { id: PAGE_TYPE.RESULTS },\n  title:   PAGE_TYPE.SUMMARY,\n  type:    PAGE_TYPE.SUMMARY,\n};\n\nexport const DEFAULT_PAGES: IPages = {\n  landingPage,\n  noResultsPage,\n  resultsPage,\n  summaryPage,\n};\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","/**\n * Collection of primitive helper methods\n */\nexport abstract class Helpers {\n  private static sanitize(val: string): string {\n    return val.toLowerCase().trim();\n  }\n\n  /**\n   * Determines if two strings are a fuzzy match\n   */\n  public static matches(left?: string, right?: string): boolean {\n    if (!left || !right) {\n      return false;\n    }\n    return Helpers.sanitize(left) === Helpers.sanitize(right);\n  }\n}\n","/*\n  eslint-disable no-console,\n                 @typescript-eslint/no-explicit-any,\n                 @typescript-eslint/explicit-module-boundary-types,\n*/\n\n/**\n * Logs to the console. All arguments logged as an object.\n * @param params\n * @returns\n */\nexport const log = (...params: any) => console.log({ ...params });\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { log } from './log';\n\n/**\n * Generic no-operation\n */\nexport const noop = (): void => { };\n\n/**\n * Generic no-element\n * @returns empty element\n */\nexport const noel = (message = '', context = ''): JSX.Element => {\n  if (message || context) {\n    log('Created an empty element', message, context);\n  }\n  return (<>{message}</>);\n};\n","import { SiteAlert }              from '@trussworks/react-uswds';\nimport FileSaver                  from 'file-saver';\nimport { QuestionableConfig }     from '../../composable/Config';\nimport { ACTION_TYPE, CSS_CLASS } from '../../lib/enums';\nimport { noel }                   from '../../lib/noop';\nimport { IStepData }              from '../../survey/IStepData';\n\nexport abstract class Wizard {\n  public static getHeader(\n    props: IStepData,\n    config: QuestionableConfig,\n  ): JSX.Element {\n    let text = props.step?.title;\n    if (!text) {\n      return noel();\n    }\n\n    if (config.steps.showStepId) {\n      text = `${props.step?.id}: ${text}`;\n    }\n    return <h3 className={`usa-card__heading ${CSS_CLASS.STEP_HEADER}`}>{text}</h3>;\n  }\n\n  public static getSubtitle(props: IStepData): JSX.Element {\n    const text = props.step?.subTitle;\n    if (!text) {\n      return noel();\n    }\n    return (\n      <p className={CSS_CLASS.STEP_SUBTITLE} dangerouslySetInnerHTML={{ __html: text }} />\n    );\n  }\n\n  public static getInfoBox(props: IStepData): JSX.Element {\n    const text = props.step?.info;\n    if (!text) {\n      return noel();\n    }\n    return (\n      <SiteAlert variant=\"info\" showIcon={false} className={`outline-1px ${CSS_CLASS.STEP_INFO}`}>\n        {text}\n      </SiteAlert>\n    );\n  }\n\n  public static getFooter(props: IStepData): JSX.Element {\n    const text = props.step?.footer;\n    if (!text) {\n      return noel();\n    }\n    return (\n      <p\n        className={`font-sans-6 ${CSS_CLASS.STEP_FOOTER}`}\n        dangerouslySetInnerHTML={{ __html: text }}\n       />\n    );\n  }\n\n  public static resetQuestionable(props: IStepData): void {\n    props.dispatchForm({\n      type: ACTION_TYPE.RESET,\n    });\n    props.wizard.goToStep('A');\n  }\n\n  // eslint-disable-next-line max-len\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\n  public static saveAsJson(data: any, fileName = 'questionable.json'): void {\n    const blob = new Blob([data], { type: 'text/plain;charset=utf-8' });\n    FileSaver.saveAs(blob, fileName);\n  }\n}\n","import { Accordion, Button } from '@trussworks/react-uswds';\nimport { CSS_CLASS }         from '../../lib';\nimport { noel }              from '../../lib/noop';\nimport { useGlobal }         from '../../state/GlobalState';\nimport { IStepData }         from '../../survey/IStepData';\nimport { Wizard }            from '../lib/Wizard';\n\nexport const DevPanel = (props: IStepData): JSX.Element => {\n  const { config } = useGlobal();\n\n  if (!config.dev) {\n    return noel();\n  }\n\n  const reset = () => Wizard.resetQuestionable(props);\n\n  return (\n    <>\n      <Accordion\n        items={[\n          {\n            content: (\n              <pre>\n                <code>{JSON.stringify(props.form, null, 4)}</code>\n              </pre>\n            ),\n            expanded: false,\n            id:       'developer-output',\n            title:    'Temporary developer panel',\n          },\n        ]}\n      />\n      <br></br>\n      <nav className={CSS_CLASS.NAVBAR}>\n        <Button type=\"reset\" secondary onClick={reset}>\n          Reset\n        </Button>\n      </nav>\n    </>\n  );\n};\n","import PB            from '@ramonak/react-progress-bar';\nimport { useGlobal } from '../../state/GlobalState';\nimport { IStepData } from '../../survey/IStepData';\nimport { noel }      from '../../lib/noop';\nimport { CSS_CLASS } from '../../lib';\n\nexport const ProgressBar = (props: IStepData): JSX.Element => {\n  const { config, questionnaire } = useGlobal();\n\n  if (config.progressBar.hide) {\n    return noel();\n  }\n\n  const completed = questionnaire.getProgressPercent(props, config);\n\n  return (\n    <div className={CSS_CLASS.PROGRESS_BAR}>\n      <PB\n        completed={completed}\n        bgColor={config.progressBar.bgColor}\n        baseBgColor={config.progressBar.baseBgColor}\n        isLabelVisible={false}\n        borderRadius={'0px'}\n      />\n    </div>\n  );\n};\n","import { StepIndicator as SI, StepIndicatorStep } from '@trussworks/react-uswds';\nimport { useGlobal }                              from '../../state/GlobalState';\nimport { IStepData }                              from '../../survey/IStepData';\nimport { ISection }                               from '../../survey/IStep';\nimport { noel }                                   from '../../lib/noop';\n\nconst getIndicatorStep = (s: ISection) => (\n    <StepIndicatorStep key={s.id} label={s.name} status={s.status || 'incomplete'} />\n);\n\nexport const StepIndicator = (props: IStepData): JSX.Element => {\n  const { config, questionnaire } = useGlobal();\n\n  if (config.progressBar.hide) {\n    return noel();\n  }\n\n  const sections = questionnaire.getSections(props, config);\n  if (sections.length === 0) {\n    return noel();\n  }\n\n  return (\n    <SI centered counters=\"small\">\n      {sections.map(getIndicatorStep)}\n    </SI>\n  );\n};\n","import { ProgressBar }       from '../wizard/ProgressBar';\nimport { StepIndicator }     from '../wizard/StepIndicator';\nimport { noel }              from '../../lib/noop';\nimport { useGlobal }         from '../../state/GlobalState';\nimport { IStepData }         from '../../survey/IStepData';\nimport { TVerticalPosition } from '../../lib/types';\n\nexport const ProgressFactory = ({ props, position }:\n  { position: TVerticalPosition, props: IStepData }): JSX.Element => {\n  const { config } = useGlobal();\n\n  if (config.progressBar.hide || config.progressBar.position !== position) {\n    return noel();\n  }\n  switch (config.progressBar.type) {\n    case 'progress-bar':\n      return <ProgressBar {...props}/>;\n    case 'step-indicator':\n      return <StepIndicator {...props} />;\n    default:\n      return noel('Could not find progress type', config.progressBar.type);\n  }\n};\n","// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst surveyData = require('./survey.json');\n\nexport const surveySchema = surveyData;\n","import { merge }                            from 'lodash';\nimport { isEnum, PAGE_TYPE, QUESTION_TYPE } from '../lib/enums';\nimport { IPageData }                        from '../survey/IPageData';\nimport { IQuestionData }                    from '../survey/IQuestionData';\nimport { surveySchema as survey }           from './index';\n\nconst schemaPart = {\n  properties: {\n    step: {\n      $ref:  '#/definitions/IStep',\n      title: 'Step',\n    },\n  },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst schemaFull: any = {\n  type: 'object',\n  ...schemaPart,\n  // eslint-disable-next-line dot-notation\n  ...survey,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getStepSchema = (props: IQuestionData | IPageData): any => {\n  const schemaProps = { ...schemaPart };\n  if (isEnum(PAGE_TYPE, props.step.type)) {\n    schemaProps.properties.step.$ref = '#/definitions/IPage';\n  } else if (isEnum(QUESTION_TYPE, props.step.type)) {\n    schemaProps.properties.step.$ref = '#/definitions/IQuestion';\n  }\n  return merge(schemaProps, schemaFull);\n};\n","import { ReactNode }    from 'react';\nimport { IGlobalState } from '../../state/GlobalState';\nimport { IResult }      from '../../survey/IResult';\nimport { IStepData }    from '../../survey/IStepData';\n\n/**\n * Static utility methods for page components\n */\nexport abstract class Pages {\n  /**\n   * Internal method to compute reason for a result\n   * @param props\n   * @param result\n   * @returns\n   */\n  static getReason(props: IStepData, result: IResult, global: IGlobalState): string {\n    let reason                      = result.match?.explanation;\n    const { questionnaire, config } = global;\n\n    if (!reason) {\n      return '';\n    }\n\n    if (config?.dev && result.match) {\n      reason += '<br><br>';\n      if (\n        result.match.ageCalc !== undefined\n        || result.match.minAge !== undefined\n        || result.match.maxAge !== undefined\n      ) {\n        reason += `You are ${props.form.age?.years} years `;\n        reason += `and ${props.form.age?.months} months old. `;\n      }\n      Object.keys(result.match.responses).forEach((id) => {\n        const q = questionnaire.getQuestionById(id);\n        reason += `You answered \"<b>${q.answer}</b>\" to the question \"<i>${q.title}.</i>\" `;\n      });\n    }\n    return reason;\n  }\n\n  /**\n   * Internal method to generate list of results\n   * @param props\n   * @returns\n   */\n  static getResults(props: IStepData, global: IGlobalState): ReactNode {\n    const { questionnaire } = global;\n    return (questionnaire.getResults(props.form).map((result) => (\n      <li key={`${props.stepId}_${result.id}`} className=\"padding-bottom-2\">\n        <span>\n          {result.label}:{'  '}\n          <b>{result.name}</b>\n        </span>\n        <div\n          className=\"text-light\"\n          dangerouslySetInnerHTML={{ __html: Pages.getReason(props, result, global) }}\n        />\n      </li>\n    )));\n  }\n}\n","import { kebabCase, values }        from 'lodash';\nimport { QuestionableConfig }       from '../../composable/Config';\nimport { QUESTION_TYPE, STEP_TYPE } from '../../lib/enums';\nimport { Questionnaire }            from '../../composable/Questionnaire';\nimport { IForm }                    from '../../survey/IForm';\nimport { IStepData }                from '../../survey/IStepData';\nimport { IQuestionData }            from '../../survey/IQuestionData';\n\nexport abstract class Steps {\n  public static goToStep(step: string, props: IStepData): void {\n    props.wizard.goToStep(step);\n  }\n\n  public static goToNextStep(\n    props: IStepData,\n    questionnaire: Questionnaire,\n    config: QuestionableConfig,\n  ): void {\n    Steps.goToStep(questionnaire.getNextStep(props, config), props);\n  }\n\n  public static goToPrevStep(\n    props: IStepData,\n    questionnaire: Questionnaire,\n    config: QuestionableConfig,\n  ): void {\n    Steps.goToStep(questionnaire.getPreviousStep(props, config), props);\n  }\n\n  /**\n   * Determines whether the user should be allowed to continue\n   * @param props\n   * @returns\n   */\n  public static isNextEnabled(props: IStepData): boolean {\n    if (!props?.step) throw new Error('This survery is not defined');\n\n    if (props.stepId === STEP_TYPE.LANDING) return true;\n\n    if (props.stepId === STEP_TYPE.SUMMARY) return true;\n\n    if (!props.form) return false;\n    // KLUDGE Alert: this is not an elegant way to solve this\n    if (props.step?.type === QUESTION_TYPE.DOB) {\n      return undefined !== props.form?.age?.years && props.form.age.years >= 0;\n    }\n    return Steps.isValid(props.form, props.step.id);\n  }\n\n  public static isValid(form: IForm, questionId: string): boolean {\n    const q = form.responses.find((a) => a.id === questionId);\n    if (!q) return false;\n    const answers = values(q.answers);\n    switch (q.type) {\n      case STEP_TYPE.DOB:\n        return undefined !== form?.age?.years && form.age.years > 0;\n      case STEP_TYPE.MULTIPLE_CHOICE:\n        return q.answer !== undefined && answers?.find((x) => x.title === q.answer) !== undefined;\n      default:\n        return true;\n    }\n  }\n\n  public static getFieldSetName(props: IQuestionData): string {\n    return kebabCase(props.step.title);\n  }\n\n  public static getDomId(answer: string, props: IQuestionData): string {\n    const name = Steps.getFieldSetName(props);\n    return `${name}-${kebabCase(answer)}`;\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { Checkbox, Fieldset, Radio } from '@trussworks/react-uswds';\nimport { DateTime }                  from 'luxon';\nimport { ACTION_TYPE, CSS_CLASS }    from '../../lib/enums';\nimport { IQuestionData }             from '../../survey/IQuestionData';\nimport { Steps }                     from './Steps';\nimport { getDateTime }               from '../../lib/date';\nimport { TDateOfBirth }              from '../../lib/types';\nimport { IQuestionableConfig }       from '../../survey/IQuestionableConfig';\nimport { IQuestionAnswer }           from '../../survey/IQuestionAnswer';\n\n/**\n * Static utility methods for question components\n */\nexport abstract class Questions {\n  /**\n   * Updates the form with the current selected answer(s)\n   * @param answer\n   * @param props\n   * @returns\n   */\n  private static updateForm(answer: string, props: IQuestionData): void {\n    Object.assign(props.step, { answer });\n    const value = {\n      answers: [props.step],\n    };\n    return props.dispatchForm({\n      type: ACTION_TYPE.UPDATE,\n      value,\n    });\n  }\n\n  /**\n   * Determines if the answer is valid and selected\n   * @param answer\n   * @param props\n   * @returns\n   */\n  private static isSelected(answer: string, props: IQuestionData): boolean | undefined {\n    if (!props?.form) {\n      return undefined;\n    }\n    const q = props.form.responses.find((a) => a.id === props.step.id);\n    if (!q) {\n      return undefined;\n    }\n    return Steps.isValid(props.form, props.step.id) && q.answer === answer;\n  }\n\n  /**\n   * Generates a radio button given a question definition\n   * @param answer\n   * @param props\n   * @returns\n   */\n  private static getRadio(\n    answer: IQuestionAnswer,\n    props: IQuestionData,\n    config: IQuestionableConfig,\n  ): JSX.Element {\n    const handler = () => Questions.updateForm(answer.title, props);\n    const id      = Steps.getDomId(answer.title, props);\n\n    return (\n      <Radio\n        id={id}\n        key={id}\n        name={Steps.getFieldSetName(props)}\n        label={answer.title}\n        value={answer.title}\n        checked={Questions.isSelected(answer.title, props) === true}\n        className={CSS_CLASS.MULTI_CHOICE}\n        onChange={handler}\n        onClick={handler}\n        tile={config.questions?.showAnswerBorder === true}\n      />\n    );\n  }\n\n  /**\n   * Gets a collection of radio buttons\n   * @param props\n   * @returns\n   */\n  public static getRadios(props: IQuestionData, config: IQuestionableConfig): JSX.Element {\n    return (<Fieldset\n      legend={props.step.title}\n      className={CSS_CLASS.MULTI_CHOICE_GROUP}\n      legendStyle=\"srOnly\"\n    >\n      {\n        props.step.answers.map((a) =>\n          Questions.getRadio(a, props, config))\n      }\n    </Fieldset>);\n  }\n\n  /**\n   * Generates a checkbox given a question definition\n   * @param answer\n   * @param props\n   * @returns\n   */\n  private static getCheckbox(\n    answer: IQuestionAnswer,\n    props: IQuestionData,\n    config: IQuestionableConfig,\n  ): JSX.Element {\n    const handler = () => Questions.updateForm(answer.title, props);\n    const id      = Steps.getDomId(answer.title, props);\n\n    return (\n      <Checkbox\n        id={id}\n        key={id}\n        name={Steps.getFieldSetName(props)}\n        label={answer.title}\n        value={answer.title}\n        checked={Questions.isSelected(answer.title, props) === true}\n        className={CSS_CLASS.MULTI_SELECT}\n        onChange={handler}\n        onClick={handler}\n        tile={config.questions?.showAnswerBorder === true}\n      />\n    );\n  }\n\n  /**\n * Gets a collection of checkboxes\n * @param props\n * @returns\n */\n  public static getCheckboxes(props: IQuestionData, config: IQuestionableConfig): JSX.Element {\n    return (\n      <Fieldset\n        legend={props.step.title}\n        className={CSS_CLASS.MULTI_SELECT_GROUP}\n        legendStyle=\"srOnly\"\n      >\n      {\n        props.step.answers.map((a) => Questions.getCheckbox(a, props, config))\n      }\n      </Fieldset>\n    );\n  }\n\n  /**\n   * Gets a birthdate's DateTime from a form\n   * @param props\n   * @returns\n   */\n  public static getBirthdate(props: IQuestionData): DateTime | undefined {\n    if (props.form?.birthdate) {\n      return getDateTime(props.form.birthdate);\n    }\n    return undefined;\n  }\n\n  /**\n   * Converts a Date of Birth type into a string\n   * @param dob\n   * @returns\n   */\n  public static toBirthdate(dob: TDateOfBirth): string | undefined {\n    if (dob.month && dob.day && dob.year) {\n      return `${dob.month.padStart(2, '0')}/${dob.day.padStart(2, '0')}/${\n        dob.year\n      }`;\n    }\n    return undefined;\n  }\n}\n","import { Button as B } from '@trussworks/react-uswds';\nimport {\n  CSS_CLASS,\n  MODE,\n  STEP_TYPE,\n  TButtonMode,\n  TVerticalPosition,\n} from '../../lib';\nimport { noel }      from '../../lib/noop';\nimport { useGlobal } from '../../state/GlobalState';\nimport { IStepData } from '../../survey/IStepData';\nimport { Steps }     from '../lib/Steps';\n\ntype TButtonConfig = {\n  dir: 'next' | 'prev';\n  disabled: () => boolean;\n  label: string;\n  mode: TButtonMode;\n  onClick: () => void,\n  stepId: string;\n}\n\nconst Button = (props: TButtonConfig): JSX.Element => (\n  <B\n    className={`${CSS_CLASS.NAVBAR_BUTTON} ${CSS_CLASS.NAVBAR_BUTTON}-${props.dir}`}\n    data-testid={`${props.dir}-button-${props.stepId}`}\n    disabled={props.disabled()}\n    onClick={props.onClick}\n    type=\"button\"\n    unstyled={props.mode === 'link'}\n    outline={props.mode !== 'link' && props.dir === 'prev'}\n  >\n    {props.label}\n  </B>\n);\n\ninterface INavBar extends IStepData {\n  verticalPos: TVerticalPosition;\n}\n\nexport const PreviousButton = (props: INavBar): JSX.Element => {\n  const { questionnaire, config } = useGlobal();\n\n  const { step }       = props;\n  const layoutMismatch = props.verticalPos !== config.nav.prev.verticalPos;\n  const surveyStart    = props.stepId === STEP_TYPE.LANDING\n    || props.stepId === questionnaire.flow[1];\n  const surveyEnd      = props.stepId === STEP_TYPE.RESULTS\n    || props.stepId === STEP_TYPE.NO_RESULTS;\n  const notEditMode    = config.mode !== MODE.EDIT\n    || (props.stepId === questionnaire.flow[0]\n    && config.mode === MODE.EDIT);\n  const doNotRender    = layoutMismatch\n    || ((surveyStart || surveyEnd)\n    && notEditMode);\n\n  if (doNotRender) {\n    return noel();\n  }\n\n  const label    = step?.buttons?.prev?.label || config.nav.prev.defaultLabel || 'Previous';\n  const onClick  = () => Steps.goToPrevStep(props, questionnaire, config);\n  const disabled = () => false;\n\n  return (\n    <Button {...\n      {\n        dir:    'prev',\n        disabled,\n        label,\n        mode:   config.nav.prev.mode || 'link',\n        onClick,\n        stepId: `${props.stepId}`,\n      }\n    }/>\n  );\n};\n\nexport const NextButton = (props: INavBar): JSX.Element => {\n  const { questionnaire, config } = useGlobal();\n  const { step }                  = props;\n  const layoutMismatch            = props.verticalPos !== config.nav.next.verticalPos;\n  const surveyEnd                 = props.stepId === STEP_TYPE.RESULTS\n    || props.stepId === STEP_TYPE.NO_RESULTS;\n  const notEditMode               = config.mode !== MODE.EDIT\n    || (props.stepId === questionnaire.flow[questionnaire.flow.length - 1]\n      && config.mode === MODE.EDIT);\n  const doNotRender               = layoutMismatch\n    || ((surveyEnd) && notEditMode);\n\n  if (doNotRender) {\n    return noel();\n  }\n\n  const label    = step?.buttons?.next?.label || config.nav.next.defaultLabel || 'Previous';\n  const onClick  = () => Steps.goToNextStep(props, questionnaire, config);\n  const disabled = () => config.mode === MODE.VIEW && !Steps.isNextEnabled(props);\n\n  return (\n    <Button {...\n      {\n        dir:    'next',\n        disabled,\n        label,\n        mode:   config.nav.next.mode || 'button',\n        onClick,\n        stepId: `${props.stepId}`,\n      }\n    }/>\n  );\n};\n","import { NextButton, PreviousButton } from './Button';\nimport { TVerticalPosition }          from '../../lib';\nimport { CSS_CLASS }                  from '../../lib/enums';\nimport { IStepData }                  from '../../survey/IStepData';\n\ninterface INavBar extends IStepData {\n  verticalPos: TVerticalPosition;\n}\n\n/**\n * Generates the Previous/Next buttons for Wizard navigation\n * @param props\n * @returns\n */\nexport const NavBar = (props: INavBar): JSX.Element => (\n  <nav className={`${CSS_CLASS.NAVBAR} ${CSS_CLASS.NAVBAR}-${props.verticalPos}`}>\n    <PreviousButton {...props} />\n    <NextButton {...props} />\n  </nav>\n);\n","import {\n  Card, CardBody, CardFooter, CardGroup, CardHeader,\n} from '@trussworks/react-uswds';\nimport { IStepData } from '../../survey/IStepData';\nimport { NavBar }    from './NavBar';\nimport { useGlobal } from '../../state/GlobalState';\n\n/**\n * Generates the Card layout for each step's contents\n * @param props\n * @returns\n */\nexport const DesignLayout = (props: IStepData): JSX.Element => {\n  const { questionnaire } = useGlobal();\n\n  return (\n    <div>\n      <NavBar {...{ ...props, verticalPos: 'top' }} />\n      <section>\n        <CardGroup>\n          <Card\n            headerFirst\n            gridLayout={{ tablet: { col: 12 } }}\n            containerProps={{ className: 'border-ink' }}\n          >\n            <CardHeader className=\"bg-base-lightest\">\n              <h1>Edit the {questionnaire.header}</h1>\n            </CardHeader>\n            <CardBody className=\"padding-top-3\">{props.children}</CardBody>\n            <CardFooter>\n              {'Click \"Save\" to save your edits, or \"Next\" to continue editing'}\n            </CardFooter>\n          </Card>\n        </CardGroup>\n      </section>\n    </div>\n  );\n};\n","import Form              from '@rjsf/semantic-ui';\nimport { Button }        from '@trussworks/react-uswds';\nimport { kebabCase }     from 'lodash';\nimport { getStepSchema } from '../../schema/editStepSchema';\nimport { useGlobal }     from '../../state/GlobalState';\nimport { IPageData }     from '../../survey/IPageData';\nimport { IQuestionData } from '../../survey/IQuestionData';\nimport { Wizard }        from '../lib';\nimport { DesignLayout }  from '../wizard/DesignLayout';\n\n/**\n * Renders a question and a radio list of allowed answers\n * @param props\n * @returns\n */\nexport const Edit = (props: IQuestionData | IPageData): JSX.Element => {\n  const { questionnaire } = useGlobal();\n  const schema            = getStepSchema(props);\n  const fileName          = kebabCase(questionnaire.header);\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  const onSubmit = ({ formData }: any) => {\n    Wizard.saveAsJson(formData, `${fileName}.json`);\n  };\n  return (\n    <Form\n      schema={schema}\n      uiSchema={{\n        step: {\n          'ui:order': [\n            'title',\n            'subTitle',\n            'bodyHeader',\n            'bodySubHeader',\n            'body',\n            'info',\n            'footer',\n            '*',\n          ],\n        },\n      }}\n      onSubmit={onSubmit}\n      formData={{ step: props.step }}\n    >\n      <div>\n        <Button type=\"submit\">Save</Button>\n      </div>\n    </Form>\n  );\n};\n\n/**\n * Renders a question and a radio list of allowed answers\n * @param props\n * @returns\n */\nexport const EditStep = (props: IQuestionData | IPageData): JSX.Element => (\n  <DesignLayout {...props}>\n    <Edit {...props} />\n  </DesignLayout>\n);\n","import {\n  Card, CardBody, CardFooter, CardGroup, CardHeader,\n} from '@trussworks/react-uswds';\nimport { IStepData } from '../../survey/IStepData';\nimport { NavBar }    from './NavBar';\nimport { Wizard }    from '../lib/Wizard';\nimport { useGlobal } from '../../state/GlobalState';\nimport { CSS_CLASS } from '../../lib';\n\n/**\n * Generates the Card layout for each step's contents\n * @param props\n * @returns\n */\nexport const StepLayout = (props: IStepData): JSX.Element => {\n  const { config }                  = useGlobal();\n  const { borderClass, titleClass } = config.steps;\n\n  return (\n    <div>\n      <NavBar {...{ ...props, verticalPos: 'top' }} />\n      <section className={CSS_CLASS.STEP_LAYOUT}>\n        <CardGroup>\n          <Card\n            headerFirst\n            gridLayout={{ tablet: { col: 12 } }}\n            containerProps={{ className: borderClass }}\n          >\n            <CardHeader className={titleClass}>\n              {Wizard.getHeader(props, config)}\n            </CardHeader>\n            <CardBody>\n              {Wizard.getSubtitle(props)}\n              {props.children}\n              {Wizard.getInfoBox(props)}\n            </CardBody>\n            <CardFooter>\n              {Wizard.getFooter(props)}\n            </CardFooter>\n          </Card>\n        </CardGroup>\n      </section>\n      <NavBar {...{ ...props, verticalPos: 'bottom' }} />\n    </div>\n  );\n};\n","import { noel }       from '../../lib/noop';\nimport { IPageData }  from '../../survey/IPageData';\nimport { StepLayout } from '../wizard/StepLayout';\n\n/**\n * Generates the first/initial/landing page of the Wizard\n * @param props\n * @returns\n */\nexport const LandingPage = (props: IPageData): JSX.Element => {\n  const { step } = props;\n  if (!step) {\n    return noel();\n  }\n\n  return (\n    <StepLayout {...props}>\n      <p>{step.body}</p>\n    </StepLayout>\n  );\n};\n","import { noel }       from '../../lib/noop';\nimport { IPageData }  from '../../survey/IPageData';\nimport { StepLayout } from '../wizard/StepLayout';\n\n/**\n * Displays the wizard results\n * @param props\n * @returns\n */\nexport const NoResultsPage = (props: IPageData): JSX.Element => {\n  const { step: page } = props;\n  if (!page) {\n    return noel();\n  }\n\n  return (\n    <StepLayout {...props}>\n    </StepLayout>\n  );\n};\n","import { SummaryBox } from '@trussworks/react-uswds';\nimport { IPageData }  from '../../survey/IPageData';\nimport { StepLayout } from '../wizard/StepLayout';\nimport { Pages }      from '../lib';\nimport { useGlobal }  from '../../state/GlobalState';\nimport { noel }       from '../../lib/noop';\nimport { CSS_CLASS }  from '../../lib';\n\n/**\n * Displays the wizard results\n * @param props\n * @returns\n */\nexport const ResultsPage = (props: IPageData): JSX.Element => {\n  const { step }          = props;\n  const global            = useGlobal();\n  const { questionnaire } = global;\n\n  if (!step) {\n    return noel();\n  }\n\n  const action = questionnaire.getAction();\n\n  return (\n    <StepLayout {...props}>\n      <SummaryBox heading={step.bodyHeader || ''} className={CSS_CLASS.RESULTS_SUMMARY_HEADER}>\n        <p>{step.bodySubHeader}</p>\n        <ul\n          className={`usa-list usa-list--unstyled ${CSS_CLASS.RESULTS_SUMMARY_BOX}`}\n        >\n          {Pages.getResults(props, global)}\n        </ul>\n        <p dangerouslySetInnerHTML={{ __html: step?.body || '' }} />\n        <h2>{action.title}</h2>\n        <p>{action.description}</p>\n        <p dangerouslySetInnerHTML={{ __html: action.action }} />.\n      </SummaryBox>\n    </StepLayout>\n  );\n};\n","import { ReactNode }  from 'react';\nimport { noel }       from '../../lib/noop';\nimport { IPageData }  from '../../survey/IPageData';\nimport { StepLayout } from '../wizard/StepLayout';\n\n/**\n * Internal method to generate a list of the survey answers\n * @param props\n * @returns\n */\nconst getAnswers = (props: IPageData): ReactNode => {\n  const answers = props.form.responses.map((question) => (\n      <li key={question.id} className=\"padding-bottom-2\">\n        <span className=\"text-light\">\n          {question.title}:&nbsp;&nbsp;\n          <b>{question.answer}</b>\n        </span>\n      </li>\n  ));\n\n  return <ul className=\"usa-list usa-list--unstyled\">{answers}</ul>;\n};\n\n/**\n * Displays a summary of the wizard prior to showing results\n * @param props\n * @returns\n */\nexport const SummaryPage = (props: IPageData): JSX.Element => {\n  const { step: page } = props;\n  if (!page) {\n    return noel();\n  }\n\n  return <StepLayout {...props}>{getAnswers(props)}</StepLayout>;\n};\n","import { DateInput, DateInputGroup } from '@trussworks/react-uswds';\nimport { capitalize }                from 'lodash';\nimport { ChangeEvent, useState }     from 'react';\nimport { getAge }                    from '../../lib/date';\nimport { ACTION_TYPE, DATE_UNIT }    from '../../lib/enums';\nimport { noel }                      from '../../lib/noop';\nimport { TDateOfBirth }              from '../../lib/types';\nimport { IQuestionData }             from '../../survey/IQuestionData';\nimport { Questions }                 from '../lib/Questions';\nimport { Steps }                     from '../lib/Steps';\nimport { StepLayout }                from '../wizard/StepLayout';\n\nexport const DateOfBirth = (props: IQuestionData): JSX.Element => {\n  const { step }          = props;\n  const dob: TDateOfBirth = {\n    day:   Questions.getBirthdate(props)?.day?.toString(),\n    month: Questions.getBirthdate(props)?.month?.toString(),\n    year:  Questions.getBirthdate(props)?.year?.toString(),\n  };\n  const [state, setState] = useState(dob);\n\n  if (!step) {\n    return noel();\n  }\n\n  const onDateOfBirthChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    unit: DATE_UNIT,\n  ): void => {\n    const val = e.target.value;\n    if (!val) {\n      return;\n    }\n    state[unit] = val;\n    setState({\n      ...state,\n    });\n    const bd  = Questions.toBirthdate(state);\n    const age = getAge(bd);\n    if (age) {\n      props.dispatchForm({\n        type:  ACTION_TYPE.UPDATE,\n        value: {\n          age,\n          birthdate: bd,\n        },\n      });\n    }\n  };\n\n  const getDateInput = (\n    unit: DATE_UNIT,\n    label: string,\n  ): JSX.Element => {\n    let length = 2;\n    if (unit === DATE_UNIT.YEAR) {\n      length = 4;\n    }\n    return (\n      <DateInput\n        id={Steps.getDomId(unit, props)}\n        name={label}\n        label={capitalize(unit)}\n        unit={unit}\n        maxLength={length}\n        minLength={length}\n        defaultValue={state[unit]}\n        onChange={(e) => onDateOfBirthChange(e, unit)}\n      />);\n  };\n\n  const getDateInputGroup = (label: string): JSX.Element => (\n    <DateInputGroup>\n      {getDateInput(DATE_UNIT.MONTH, label)}\n      {getDateInput(DATE_UNIT.DAY, label)}\n      {getDateInput(DATE_UNIT.YEAR, label)}\n    </DateInputGroup>\n  );\n\n  return getDateInputGroup('date_of_birth');\n};\n\nexport const DateOfBirthStep = (props: IQuestionData): JSX.Element => (\n  <StepLayout {...props}>\n    <DateOfBirth {...props} />\n  </StepLayout>\n);\n","import { noel }          from '../../lib/noop';\nimport { useGlobal }     from '../../state/GlobalState';\nimport { IQuestionData } from '../../survey/IQuestionData';\nimport { Questions }     from '../lib/Questions';\nimport { StepLayout }    from '../wizard/StepLayout';\n\n/**\n * Renders a question and a checkbox list of allowed answers\n * @param props\n * @returns\n */\nexport const MultipleSelect = (props: IQuestionData): JSX.Element => {\n  const { config } = useGlobal();\n\n  if (props?.step?.answers === undefined) {\n    return noel();\n  }\n\n  return Questions.getCheckboxes(props, config);\n};\n\n/**\n * Renders a question and a checkbox list of allowed answers\n * @param props\n * @returns\n */\nexport const MultipleSelectStep = (props: IQuestionData): JSX.Element => (\n  <StepLayout {...props}>\n    <MultipleSelect {...props} />\n  </StepLayout>\n);\n","import { noel }          from '../../lib/noop';\nimport { useGlobal }     from '../../state';\nimport { IQuestionData } from '../../survey/IQuestionData';\nimport { Questions }     from '../lib/Questions';\nimport { StepLayout }    from '../wizard/StepLayout';\n\n/**\n * Renders a question and a radio list of allowed answers\n * @param props\n * @returns\n */\nexport const MultipleChoice = (props: IQuestionData): JSX.Element => {\n  const { config } = useGlobal();\n\n  if (props?.step?.answers === undefined) {\n    return noel('Question and answer are not defined');\n  }\n\n  return Questions.getRadios(props, config);\n};\n\n/**\n * Renders a question and a radio list of allowed answers\n * @param props\n * @returns\n */\nexport const MultipleChoiceStep = (props: IQuestionData): JSX.Element => (\n  <StepLayout {...props}>\n    <MultipleChoice {...props} />\n  </StepLayout>\n);\n","import {\n  isEnum, QUESTION_TYPE,\n} from '../../lib/enums';\nimport { noel }          from '../../lib/noop';\nimport { useGlobal }     from '../../state/GlobalState';\nimport { IStepData }     from '../../survey/IStepData';\nimport { IQuestionData } from '../../survey/IQuestionData';\nimport {\n  DateOfBirthStep,\n  MultipleChoiceStep,\n  MultipleSelectStep,\n} from '../questions';\n\n/**\n * Given a step of a known question type, generates a question component\n * @param props\n * @returns\n */\nexport const QuestionFactory = (props: IStepData): JSX.Element => {\n  const { stepId }        = props;\n  const { questionnaire } = useGlobal();\n  const step              = questionnaire.getStepById(`${stepId}`);\n\n  if (!isEnum(QUESTION_TYPE, step.type)) {\n    return noel('Not a question');\n  }\n  const question = questionnaire.getQuestionById(step.id);\n  const stepData = { ...{ step: question, ...props } } as IQuestionData;\n  switch (question.type) {\n    case QUESTION_TYPE.DOB:\n      return <DateOfBirthStep {...stepData} />;\n    case QUESTION_TYPE.MULTIPLE_CHOICE:\n      return <MultipleChoiceStep {...stepData} />;\n    case QUESTION_TYPE.MULTIPLE_SELECT:\n      return <MultipleSelectStep {...stepData} />;\n    default:\n      return noel('Question does not exist', 'QuestionFactory');\n  }\n};\n","import {\n  isEnum, MODE, PAGE_TYPE, QUESTION_TYPE,\n} from '../../lib/enums';\nimport { noel }            from '../../lib/noop';\nimport { useGlobal }       from '../../state/GlobalState';\nimport { IStep }           from '../../survey/IStep';\nimport { IStepData }       from '../../survey/IStepData';\nimport { DesignFactory }   from './DesignFactory';\nimport { PageFactory }     from './PageFactory';\nimport { QuestionFactory } from './QuestionFactory';\n\nconst viewFactory = (props: IStepData, step: IStep): JSX.Element => {\n  if (isEnum(QUESTION_TYPE, step.type)) {\n    return QuestionFactory(props);\n  }\n  if (isEnum(PAGE_TYPE, step.type)) {\n    return PageFactory(props);\n  }\n  return noel('Step does not exist', 'StepFactory');\n};\n\n/**\n * Core UI factory for generating steps\n * @param props\n * @returns\n */\nexport const StepFactory = (props: IStepData): JSX.Element => {\n  const { stepId }                = props;\n  const { questionnaire, config } = useGlobal();\n  const step                      = questionnaire.getStepById(`${stepId}`);\n\n  if (config.mode === MODE.EDIT) {\n    return DesignFactory(props, step);\n  }\n  return viewFactory(props, step);\n};\n","import {\n  isEnum, PAGE_TYPE,\n} from '../../lib/enums';\nimport { noel }      from '../../lib/noop';\nimport { useGlobal } from '../../state/GlobalState';\nimport { IStepData } from '../../survey/IStepData';\nimport { IPageData } from '../../survey/IPageData';\nimport {\n  LandingPage,\n  NoResultsPage,\n  ResultsPage,\n  SummaryPage,\n} from '../pages';\n\n/**\n * Given a step of a known page type, returns a page component\n * @param props\n * @returns\n */\nexport const PageFactory = (props: IStepData): JSX.Element => {\n  const { stepId }        = props;\n  const { questionnaire } = useGlobal();\n  const step              = questionnaire.getStepById(`${stepId}`);\n  if (!isEnum(PAGE_TYPE, step.type)) {\n    return noel('Not a page');\n  }\n  const page     = questionnaire.getPageById(step.id);\n  const stepData = { ...{ step: page, ...props } } as IPageData;\n  switch (page.type) {\n    case PAGE_TYPE.LANDING:\n      return <LandingPage {...stepData} />;\n    case PAGE_TYPE.NO_RESULTS:\n      return <NoResultsPage {...stepData} />;\n    case PAGE_TYPE.RESULTS:\n      return <ResultsPage {...stepData} />;\n    case PAGE_TYPE.SUMMARY:\n      return <SummaryPage {...stepData} />;\n    default:\n      return noel('Page does not exist', 'PageFactory');\n  }\n};\n","import { isEnum, PAGE_TYPE, QUESTION_TYPE } from '../../lib/enums';\nimport { noel }                             from '../../lib/noop';\nimport { useGlobal }                        from '../../state/GlobalState';\nimport { IStep }                            from '../../survey/IStep';\nimport { IStepData }                        from '../../survey/IStepData';\nimport { IPageData }                        from '../../survey/IPageData';\nimport { IQuestionData }                    from '../../survey/IQuestionData';\nimport { EditStep }                         from '../design/Edit';\n/**\n * Given a step of a known question type, generates a question component\n * @param props\n * @returns\n */\nexport const DesignFactory = (props: IStepData, step: IStep): JSX.Element => {\n  const { questionnaire }   = useGlobal();\n  const question            = questionnaire.getStepById(step.id);\n  const stepData: IStepData = { ...{ step: question, ...props } };\n\n  if (isEnum(QUESTION_TYPE, step.type)) {\n    const questionData = stepData as IQuestionData;\n    return <EditStep {...questionData}></EditStep>;\n  }\n  if (isEnum(PAGE_TYPE, step.type)) {\n    const pageData = stepData as IPageData;\n    return <EditStep {...pageData}></EditStep>;\n  }\n  return noel('Not an editable type');\n};\n","import { useReducer }                         from 'react';\nimport { useWizard }                          from 'use-wizard';\nimport { Answer }                             from '../composable/Answer';\nimport { GlobalStateProvider, IQuestionable } from '../state/GlobalState';\nimport { stepReducer }                        from '../state/stepReducer';\nimport { DevPanel }                           from './wizard/DevPanel';\nimport { ProgressFactory }                    from './factories/ProgressFactory';\nimport { StepFactory }                        from './factories/StepFactory';\nimport { CSS_CLASS }                          from '../lib/enums';\n\nexport const Questionable = (q: IQuestionable): JSX.Element => {\n  const { questionnaire } = q;\n  if (!questionnaire) {\n    throw new Error('questionable is undefined');\n  }\n\n  const [step, wizard] = useWizard(questionnaire.flow);\n\n  // This is only used to store user inputs\n  const [form, dispatchForm] = useReducer(stepReducer, new Answer());\n  return (\n    <GlobalStateProvider value={q}>\n      <div className={CSS_CLASS.BASE}>\n        <section className={`section ${CSS_CLASS.PROGRESS_BAR_TOP_SECTION}`}>\n          <ProgressFactory {...{\n            position: 'top',\n            props:    {\n              dispatchForm,\n              form,\n              stepId: step,\n              wizard,\n            },\n          }}/>\n        </section>\n\n        <section className={`section ${CSS_CLASS.STEP_LAYOUT_SECTION}`}>\n          <StepFactory\n            {...{\n              dispatchForm,\n              form,\n              stepId: step,\n              wizard,\n            }}\n          />\n        </section>\n\n        <section className={`section ${CSS_CLASS.PROGRESS_BAR_BOTTOM_SECTION}`}>\n          <ProgressFactory {...{\n            position: 'bottom',\n            props:    {\n              dispatchForm,\n              form,\n              stepId: step,\n              wizard,\n            },\n          }}/>\n        </section>\n\n        <section className={`section ${CSS_CLASS.DEV_PANEL_SECTION}`}>\n          <DevPanel\n            {...{\n              dispatchForm,\n              form,\n              stepId: step,\n              wizard,\n            }}\n          />\n        </section>\n      </div>\n    </GlobalStateProvider>\n  );\n};\n","export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}","import classApplyDescriptorSet from \"./classApplyDescriptorSet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}","import classApplyDescriptorGet from \"./classApplyDescriptorGet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}","import { isString, merge }                                                 from 'lodash';\nimport { isEnum, MODE }                                                    from '../lib/enums';\nimport {\n  INavigationConfig,\n  IProgressBarConfig, IQuestionableConfig, IQuestionConfig, IStepConfig,\n} from '../survey/IQuestionableConfig';\n\n/**\n * Configuration class for customizing the Questionable components\n *\n * The config has opinionated defaults, but is easily modified using Partial updates\n */\nexport class QuestionableConfig implements IQuestionableConfig {\n  #mode = MODE.VIEW;\n\n  #nav: INavigationConfig = {\n    next: {\n      defaultLabel:  'Next',\n      horizontalPos: 'left',\n      mode:          'button',\n      verticalPos:   'bottom',\n    },\n    prev: {\n      defaultLabel:  'Go back',\n      horizontalPos: 'left',\n      mode:          'link',\n      verticalPos:   'top',\n    },\n  }\n\n  #progressBar: IProgressBarConfig = {\n    baseBgColor: '#f0f0f0',\n    bgColor:     '#005ea2',\n    hide:        false,\n    position:    'bottom',\n    type:        'progress-bar',\n  }\n\n  #questions: IQuestionConfig = {\n    showAnswerBorder: true,\n  }\n\n  #steps: IStepConfig = {\n    borderClass: 'border-0',\n    showStepId:  false,\n    titleClass:  '',\n  }\n\n  constructor(config: Partial<IQuestionableConfig> = {}) {\n    merge(this, config);\n    if (this.dev) {\n      this.#steps.showStepId = true;\n    }\n  }\n\n  get dev(): boolean {\n    return this.#mode === MODE.DEV;\n  }\n\n  get mode(): MODE {\n    return this.#mode;\n  }\n\n  set mode(val: MODE | string) {\n    if (isString(val)) {\n      if (isEnum(MODE, val)) {\n        this.#mode = val as MODE;\n      } else {\n        this.#mode = MODE.VIEW;\n      }\n    } else {\n      this.#mode = val;\n    }\n  }\n\n  get nav(): INavigationConfig {\n    return { ...this.#nav };\n  }\n\n  set nav(val: Partial<INavigationConfig>) {\n    merge(this.#nav, val);\n  }\n\n  get progressBar(): IProgressBarConfig {\n    return { ...this.#progressBar };\n  }\n\n  set progressBar(val: Partial<IProgressBarConfig>) {\n    merge(this.#progressBar, val);\n  }\n\n  get questions(): IQuestionConfig {\n    return { ...this.#questions };\n  }\n\n  set questions(val: Partial<IQuestionConfig>) {\n    merge(this.#questions, val);\n  }\n\n  get steps(): IStepConfig {\n    return { ...this.#steps };\n  }\n\n  set steps(val: Partial<IStepConfig>) {\n    merge(this.#steps, val);\n  }\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { ArrayUnique }   from 'class-validator';\nimport { DEFAULT_PAGES } from '../lib/defaultPages';\nimport {\n  DIRECTION,\n  isEnum,\n  MODE,\n  PAGE_TYPE,\n  PROGRESS_BAR_STATUS,\n  QUESTION_TYPE,\n  STEP_TYPE,\n} from '../lib/enums';\nimport { Helpers }             from '../lib/helpers';\nimport { TAge, TAgeCalc }      from '../lib/types';\nimport { IQuestionableConfig } from '../survey/IQuestionableConfig';\nimport { IAction }             from '../survey/IAction';\nimport { IForm }               from '../survey/IForm';\nimport { IQuestionnaire }      from '../survey/IQuestionnaire';\nimport {\n  IRequirement,\n  ISection,\n  IStep,\n  IQuestion,\n  IPage,\n  IResponse,\n}                from '../survey/IStep';\nimport { IResult }            from '../survey/IResult';\nimport { IPages }             from '../survey/IPages';\nimport { IStepData }          from '../survey/IStepData';\nimport { QuestionableConfig } from './Config';\n\n/**\n * Utility wrapper for survey state\n */\nexport class Questionnaire implements IQuestionnaire {\n  @ArrayUnique((question: IQuestion) => question.id)\n  readonly questions!: IQuestion[];\n\n  readonly header!: string;\n\n  @ArrayUnique((result: IResult) => result.label)\n  readonly results!: IResult[];\n\n  readonly flow: string[];\n\n  @ArrayUnique((section: ISection) => section.id)\n  readonly sections!: ISection[];\n\n  readonly actions!: IAction[];\n\n  readonly pages: IPages = DEFAULT_PAGES;\n\n  private readonly steps: IStep[];\n\n  constructor(data: IQuestionnaire) {\n    Object.assign(this, data);\n\n    // Create a new collection for our flow logic\n    this.steps = [...this.questions];\n\n    this.init();\n\n    // Wizard flow is defined as linear sequence of unique ids\n    this.flow = this.steps.map((q) => q.id);\n  }\n\n  /**\n   * Fetches a question by its id\n   * @param id unique identifier of the question\n   * @returns\n   */\n  getStepById(id: string): IStep {\n    const ret = this.steps.find((q) => q.id === id);\n    if (!ret) {\n      throw new Error(`Step id: ${id} not found in survery`);\n    }\n    return ret;\n  }\n\n  /**\n   * Fetches a question by its id\n   * @param id unique identifier of the question\n   * @returns\n   */\n  getPageById(id: string): IPage {\n    const ret = this.getStepById(id);\n    if (!isEnum(PAGE_TYPE, ret.type)) {\n      throw new Error(`Step id: ${id} is not a page`);\n    }\n    return ret as IPage;\n  }\n\n  /**\n   * Fetches a question by its id\n   * @param id unique identifier of the question\n   * @returns\n   */\n  getQuestion(q: Partial<IQuestion>): IQuestion {\n    if (!q.id) {\n      throw new Error(`Question ${q} is not defined`);\n    }\n    return this.getQuestionById(q.id);\n  }\n\n  /**\n   * Fetches a question by its id\n   * @param id unique identifier of the question\n   * @returns\n   */\n  getQuestionById(id: string): IQuestion {\n    const ret = this.getStepById(id);\n    if (!isEnum(QUESTION_TYPE, ret.type)) {\n      throw new Error(`Step id: ${id} not a question`);\n    }\n    return ret as IQuestion;\n  }\n\n  /**\n   * Returns the next step in the sequence which is permitted by the current state of the form\n   */\n  getStep(\n    thisStep: string,\n    form: IForm,\n    direction: DIRECTION,\n    config = new QuestionableConfig(),\n  ): string {\n    const nextStep =      this.flow.indexOf(thisStep) !== -1\n      ? this.flow[this.flow.indexOf(thisStep) + direction]\n      : undefined;\n    // If there are no more steps, stay on current\n    if (!nextStep) {\n      return thisStep;\n    }\n\n    if (config.mode === MODE.EDIT) {\n      return nextStep;\n    }\n    // Special handling for results\n    if (nextStep === STEP_TYPE.RESULTS && this.getResults(form).length === 0) {\n      return STEP_TYPE.NO_RESULTS;\n    }\n    if (nextStep === STEP_TYPE.NO_RESULTS && this.getResults(form).length > 0) {\n      return STEP_TYPE.RESULTS;\n    }\n\n    const nextQuestion = this.getStepById(nextStep);\n    if (!nextQuestion?.requirements) {\n      return nextStep;\n    }\n\n    // match is a tri-state (undefined === unset)\n    let match: boolean | undefined;\n    // Each requirement is joined by `OR`\n    nextQuestion.requirements.forEach((r) => {\n      // This safely handles cases where requirement parameters are undefined\n      const next = this.meetsAllRequirements(r, form);\n\n      if (match === undefined) {\n        match = next;\n      } else {\n        match = match || next;\n      }\n    });\n\n    // If the requested step meets all requirements, return it\n    if (match) {\n      return nextStep;\n    }\n    // Get the next step whose requirements are met\n    const n = this.getStep(nextStep, form, direction);\n    if (n !== nextStep) {\n      return n;\n    }\n    return thisStep;\n  }\n\n  getNextStep(props: IStepData, config = new QuestionableConfig()): string {\n    const thisStep = props.stepId as string;\n    return this.getStep(thisStep, props.form, DIRECTION.FORWARD, config);\n  }\n\n  getPreviousStep(props: IStepData, config = new QuestionableConfig()): string {\n    const thisStep = props.stepId as string;\n    return this.getStep(thisStep, props.form, DIRECTION.BACKWARD, config);\n  }\n\n  /**\n   * Calculate the percent of survey completed\n   * @param props\n   * @returns\n   */\n  getProgressPercent(props: IStepData, config: IQuestionableConfig): number {\n    if (Helpers.matches(props.step?.section?.id, PAGE_TYPE.RESULTS)) {\n      return 100;\n    }\n    const sections = this.getSections(props, config);\n    const lastStep = sections[sections.length - 1];\n    // if there is no step, the questionnaire has just started\n    if (!lastStep?.lastStep) {\n      // Always show a little progress\n      return 0.5;\n    }\n    const thisStepIdx = this.flow.indexOf(`${props.stepId}`);\n    // add 2 to account for the summary and result steps\n    let lastStepIdx = lastStep.lastStep + 2;\n    if (config.mode === MODE.EDIT) {\n      // if in design mode, every step will be iterated\n      lastStepIdx = this.flow.length - 1;\n    }\n    // To calculate the percent, divide the index of this step\n    //   by the index of the last step multiplied by 100.\n    return Math.round((thisStepIdx / lastStepIdx) * 100);\n  }\n\n  /**\n   * Gets all of the currently available sections\n   * @param props\n   * @returns\n   */\n  getSections(props: IStepData, config: IQuestionableConfig): ISection[] {\n    if (!props) {\n      return [];\n    }\n\n    const thisStep        = props.stepId as string;\n    const thisQuestion    = this.getStepById(thisStep);\n    const thisQuestionIdx = this.steps.indexOf(thisQuestion);\n\n    // Get all sections that meet the requirements based on current answers\n    let sections = this.sections.filter(\n      (s) =>\n        s.requirements.length === 0\n        || s.requirements.some((r) => this.meetsAllRequirements(r, props.form)),\n    );\n    if (config.mode === MODE.EDIT) {\n      // In design mode, all sections are valid\n      sections = [...this.sections];\n    }\n    return sections.map((s) => {\n      const section    = { ...s };\n      section.lastStep = this.questions.reduce(\n        (acc, q, index) => (q.section.id === s.id ? index : acc),\n        -1,\n      );\n      if (Helpers.matches(section.id, PAGE_TYPE.RESULTS)) {\n        section.lastStep = this.questions.length - 2;\n      } else if (Helpers.matches(section.id, PAGE_TYPE.LANDING)) {\n        section.lastStep = 0;\n      }\n      if (section.lastStep < 0) {\n        section.status = PROGRESS_BAR_STATUS.INCOMPLETE;\n      } else if (Helpers.matches(section.id, thisQuestion.section.id)) {\n        section.status = PROGRESS_BAR_STATUS.CURRENT;\n      } else if (section.lastStep < thisQuestionIdx) {\n        section.status = PROGRESS_BAR_STATUS.COMPLETE;\n      }\n      return section;\n    });\n  }\n\n  /**\n   * Get all the results compatible with the current answers of the form\n   * @param form\n   * @returns\n   */\n  getResults(form: IForm): IResult[] {\n    return this.results.filter((r) =>\n      r.requirements.some((match) => {\n        if (this.meetsAllRequirements(match, form)) {\n          Object.assign(r, { match });\n          return true;\n        }\n        return false;\n      }));\n  }\n\n  /**\n   * Get a randomized action\n   * @returns\n   */\n  getAction(): IAction {\n    const idx = Math.floor(Math.random() * this.actions.length);\n    return this.actions[idx];\n  }\n\n  /**\n   * Performs constructor validation on the survery inputs.\n   * Sets step defaults for landing, summary and result if none are defined.\n   */\n  private init() {\n    if (this.questions?.length <= 0) {\n      throw new Error('No questions have been defined.');\n    }\n    if (this.header?.length <= 0) {\n      throw new Error('No header has been defined.');\n    }\n    if (this.results?.length <= 0) {\n      throw new Error('No results have been defined.');\n    }\n\n    // NOTE: the following default assignment logic is not yet factored out.\n    // This could be abstracted if repitions of this pattern emerge.\n\n    const error = 'step is not correctly defined or defined more than once';\n\n    // Ensure the wizard has a landing step at the beginning\n    if (this.steps[0].type !== PAGE_TYPE.LANDING) {\n      this.steps.unshift(this.pages.landingPage);\n    }\n    if (this.steps.filter((q) => q.type === PAGE_TYPE.LANDING).length !== 1) {\n      throw new Error(`${PAGE_TYPE.LANDING} ${error}.`);\n    }\n\n    // Ensure the wizard has a no results step at the end\n    if (this.steps[this.steps.length - 1].type !== PAGE_TYPE.NO_RESULTS) {\n      // No results is last\n      this.steps.push(this.pages.noResultsPage);\n    }\n    if (\n      this.steps.filter((q) => q.type === PAGE_TYPE.NO_RESULTS).length !== 1\n    ) {\n      throw new Error(`${PAGE_TYPE.NO_RESULTS} ${error}.`);\n    }\n\n    // Ensure the wizard has a result step before the no results step\n    if (this.steps[this.steps.length - 2].type !== PAGE_TYPE.RESULTS) {\n      this.steps.splice(this.steps.length - 1, 0, this.pages.resultsPage);\n    }\n    if (this.steps.filter((q) => q.type === PAGE_TYPE.RESULTS).length !== 1) {\n      throw new Error(`${PAGE_TYPE.RESULTS} ${error}.`);\n    }\n\n    // Ensure the wizard has a summary step before results\n    if (this.steps[this.steps.length - 3].type !== PAGE_TYPE.SUMMARY) {\n      // Create wizard's summary step as the default step\n      this.steps.splice(this.steps.length - 2, 0, this.pages.summaryPage);\n    }\n    if (this.steps.filter((q) => q.type === PAGE_TYPE.SUMMARY).length !== 1) {\n      throw new Error(`${PAGE_TYPE.SUMMARY} ${error}.`);\n    }\n  }\n\n  private meetsAllRequirements(requirement: IRequirement, form: IForm) {\n    const {\n      minAge, maxAge, responses: answers, ageCalc,\n    } = requirement;\n    // Internal to each requirement, all evaluations are `AND`\n    // This safely handles cases where requirement parameters are undefined\n    return (\n      Questionnaire.meetsMinAgeRequirements(form, minAge)\n      && Questionnaire.meetsMaxAgeRequirements(form, maxAge)\n      && Questionnaire.meetsAgeCalcRequirements(form, ageCalc)\n      && this.meetsAnswerRequirements(answers)\n    );\n  }\n\n  /**\n   * Validates minimum age requirements\n   * @param form The current state of the form\n   * @param minAge a TAge object or undefined\n   * @returns true if no min age, else true if age is >= min age\n   */\n  private static meetsMinAgeRequirements(\n    form: IForm,\n    minAge?: TAge,\n  ): boolean {\n    if (!minAge) return true;\n\n    if (form.age === undefined) {\n      return false;\n    }\n    const {\n      age: { years, months },\n    } = form;\n\n    return (\n      years > minAge?.years\n      || (years >= minAge?.years && months >= minAge?.months)\n    );\n  }\n\n  /**\n   * Validates maximum age requirements\n   * @param form The current state of the form\n   * @param maxAge a TAge object or undefined\n   * @returns true if no max age, else true if age is <= max age\n   */\n  private static meetsMaxAgeRequirements(\n    form: IForm,\n    maxAge?: TAge,\n  ): boolean {\n    if (!maxAge) return true;\n    if (form.age === undefined) {\n      return false;\n    }\n    const {\n      age: { years, months },\n    } = form;\n\n    return (\n      years < maxAge?.years\n      || (years <= maxAge?.years && months <= maxAge?.months)\n    );\n  }\n\n  /**\n   * Executes an arbitrary function to determine age eligibility\n   * @param form The current state of the form\n   * @param ageCalc A callback function that operates on an age\n   * @returns\n   */\n  private static meetsAgeCalcRequirements(\n    form: IForm,\n    ageCalc?: TAgeCalc,\n  ): boolean {\n    if (!ageCalc) return true;\n    if (form.birthdate === undefined) {\n      return false;\n    }\n    const { birthdate } = form;\n\n    return ageCalc(birthdate);\n  }\n\n  /**\n   * Determines if current answers in the form meet the step's requirements\n   * @param answers Collection of required answer Helpers.matches\n   * @returns true if all answers are valid or if no answers are required\n   */\n  private meetsAnswerRequirements(answers?: IResponse[]): boolean {\n    if (!answers || answers.length <= 0) return true;\n\n    return answers.every((a) => {\n      const question = this.getQuestion(a.question);\n      if (question.answers?.length > 0) {\n        // Allowed answers are an array. Any matched answer makes the response valid.\n        return a.answers.some(\n          (i) =>\n            question.answer !== undefined\n            && question.answer === question.answers.find((x) => x.id === i.id)?.title,\n        );\n      }\n      // If no answers are defined, this passes\n      return true;\n    });\n  }\n}\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","_slicedToArray","isArray","arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","value","err","iterableToArrayLimit","unsupportedIterableToArray","TypeError","nonIterableRest","_classCallCheck","instance","Constructor","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","QUESTION_TYPE","PAGE_TYPE","DESIGN_TYPE","Answer","form","assign","this","started","Date","GlobalStateContext","createContext","setState","state","useGlobalState","context","useContext","Error","GlobalStateProvider","children","useState","_jsx","Provider","useQuestionnaire","questionnaire","useConfig","config","useGlobal","DIRECTION","PROGRESS_BAR_STATUS","ACTION","ACTION_TYPE","DATE_UNIT","MODE","CSS_CLASS","STEP_TYPE","isEnum","enm","values","includes","stepReducer","previousState","action","type","RESET","UPDATE","merge","moment","require","isValidDate","dt","isValid","getDateTime","date","substring","DateTime","fromJSDate","getAge","dateOfBirth","dob","now","yearNow","year","monthNow","month","dateNow","day","yearDob","monthDob","dateDob","years","months","days","getDateTimeAge","landingPage","buttons","label","id","LANDING","section","title","resultsPage","RESULTS","DEFAULT_PAGES","noResultsPage","NO_RESULTS","summaryPage","SUMMARY","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","Helpers","val","toLowerCase","trim","left","right","sanitize","log","params","console","noel","message","_Fragment","Wizard","text","step","_props$step","steps","showStepId","_props$step2","className","STEP_HEADER","_props$step3","subTitle","STEP_SUBTITLE","dangerouslySetInnerHTML","__html","_props$step4","info","SiteAlert","variant","showIcon","STEP_INFO","_props$step5","footer","STEP_FOOTER","dispatchForm","wizard","goToStep","data","fileName","blob","Blob","FileSaver","saveAs","DevPanel","dev","_jsxs","Accordion","items","content","JSON","stringify","expanded","NAVBAR","Button","secondary","onClick","resetQuestionable","ProgressBar","progressBar","hide","completed","getProgressPercent","PROGRESS_BAR","PB","bgColor","baseBgColor","isLabelVisible","borderRadius","getIndicatorStep","s","StepIndicatorStep","status","StepIndicator","sections","getSections","SI","centered","counters","map","ProgressFactory","position","surveySchema","schemaPart","properties","$ref","schemaFull","survey","Pages","result","global","reason","match","_result$match","explanation","undefined","ageCalc","minAge","maxAge","age","_props$form$age","_props$form$age2","keys","responses","forEach","q","getQuestionById","answer","getResults","getReason","stepId","Steps","getNextStep","getPreviousStep","DOB","_props$form","questionId","find","a","answers","_form$age","MULTIPLE_CHOICE","x","kebabCase","getFieldSetName","Questions","handler","updateForm","getDomId","Radio","checked","isSelected","MULTI_CHOICE","onChange","tile","questions","showAnswerBorder","Fieldset","legend","MULTI_CHOICE_GROUP","legendStyle","getRadio","Checkbox","MULTI_SELECT","MULTI_SELECT_GROUP","getCheckbox","birthdate","padStart","B","NAVBAR_BUTTON","dir","disabled","unstyled","mode","outline","PreviousButton","layoutMismatch","verticalPos","nav","prev","surveyStart","flow","surveyEnd","notEditMode","EDIT","defaultLabel","goToPrevStep","NextButton","VIEW","isNextEnabled","goToNextStep","NavBar","DesignLayout","CardGroup","Card","headerFirst","gridLayout","tablet","col","containerProps","CardHeader","header","CardBody","CardFooter","Edit","schema","schemaProps","getStepSchema","Form","uiSchema","onSubmit","formData","saveAsJson","EditStep","StepLayout","borderClass","titleClass","STEP_LAYOUT","getHeader","getSubtitle","getInfoBox","getFooter","LandingPage","body","NoResultsPage","ResultsPage","getAction","SummaryBox","heading","bodyHeader","RESULTS_SUMMARY_HEADER","bodySubHeader","RESULTS_SUMMARY_BOX","description","getAnswers","question","SummaryPage","DateOfBirth","getBirthdate","_Questions$getBirthda","_Questions$getBirthda2","_Questions$getBirthda3","_Questions$getBirthda4","_Questions$getBirthda5","_Questions$getBirthda6","onDateOfBirthChange","e","unit","bd","toBirthdate","getDateInput","YEAR","DateInput","capitalize","maxLength","minLength","defaultValue","DateInputGroup","MONTH","DAY","DateOfBirthStep","MultipleSelect","getCheckboxes","MultipleSelectStep","MultipleChoice","getRadios","MultipleChoiceStep","viewFactory","getStepById","stepData","MULTIPLE_SELECT","QuestionFactory","page","getPageById","PageFactory","StepFactory","questionData","pageData","DesignFactory","Questionable","useWizard","useReducer","BASE","PROGRESS_BAR_TOP_SECTION","STEP_LAYOUT_SECTION","PROGRESS_BAR_BOTTOM_SECTION","DEV_PANEL_SECTION","_classExtractFieldDescriptor","receiver","privateMap","has","get","_classPrivateFieldSet","set","classApplyDescriptorSet","classExtractFieldDescriptor","_classPrivateFieldGet","classApplyDescriptorGet","QuestionableConfig","horizontalPos","DEV","isString","_toConsumableArray","arrayWithoutHoles","iter","iterableToArray","nonIterableSpread","_typeof","__decorate","decorators","desc","d","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","Questionnaire","init","ret","thisStep","direction","nextStep","indexOf","nextQuestion","requirements","_this","meetsAllRequirements","getStep","FORWARD","BACKWARD","matches","_props$step$section","lastStep","thisStepIdx","lastStepIdx","Math","round","thisQuestion","thisQuestionIdx","filter","some","_this2","reduce","acc","index","INCOMPLETE","CURRENT","COMPLETE","results","_this3","idx","floor","random","actions","error","unshift","pages","splice","requirement","meetsMinAgeRequirements","meetsMaxAgeRequirements","meetsAgeCalcRequirements","meetsAnswerRequirements","every","_this4","getQuestion","_question$answers$fin","ArrayUnique"],"mappings":"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"}