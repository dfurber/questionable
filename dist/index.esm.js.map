{"version":3,"file":"index.esm.js","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../src/lib/enums.ts","../src/composable/Answer.ts","../src/state/GlobalState.tsx","../src/state/stepReducer.ts","../src/lib/date.ts","../src/lib/defaultPages.ts","../src/lib/log.ts","../src/lib/noop.tsx","../node_modules/@babel/runtime/helpers/esm/createClass.js","../src/components/lib/Wizard.tsx","../src/components/wizard/DevPanel.tsx","../src/components/wizard/ProgressBar.tsx","../src/components/wizard/StepIndicator.tsx","../src/components/factories/ProgressFactory.tsx","../src/components/lib/Steps.tsx","../src/components/wizard/Button.tsx","../src/components/wizard/NavBar.tsx","../src/components/wizard/DesignLayout.tsx","../src/schema/index.ts","../src/schema/edit.ts","../src/components/lib/Pages.tsx","../src/components/lib/Questions.tsx","../src/components/design/Edit.tsx","../src/components/wizard/StepLayout.tsx","../src/components/pages/LandingPage.tsx","../src/components/pages/NoResultsPage.tsx","../src/components/pages/ResultsPage.tsx","../src/components/pages/SummaryPage.tsx","../src/components/questions/DateOfBirth.tsx","../src/components/questions/MultipleChoice.tsx","../src/components/questions/MultiSelect.tsx","../src/components/factories/QuestionFactory.tsx","../src/components/factories/StepFactory.tsx","../src/components/factories/PageFactory.tsx","../src/components/factories/DesignFactory.tsx","../src/components/Questionable.tsx"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/**\n * Defines the known component types for questions\n */\nexport enum QUESTION_TYPE {\n  DOB = 'dob',\n  MULTIPLE_CHOICE = 'multiple_choice',\n  MULTIPLE_SELECT = 'multiple_select',\n}\n\n/**\n * Defines the known component types for pages\n */\nexport enum PAGE_TYPE {\n  LANDING = 'Landing',\n  NO_RESULTS = 'No Results',\n  RESULTS = 'Results',\n  SUMMARY = 'Summary',\n}\n\n/**\n * Defines the known component types for design\n */\nexport enum DESIGN_TYPE {\n  EDIT = 'Edit',\n}\n\n/**\n * Defines the type of step for UI rendering\n */\nexport const STEP_TYPE = { ...PAGE_TYPE, ...QUESTION_TYPE, ...DESIGN_TYPE };\nexport type TStepType = PAGE_TYPE | QUESTION_TYPE | DESIGN_TYPE;\n\n/**\n * Navigation direction for steps by array index (+1 or -1)\n */\nexport enum DIRECTION {\n  FORWARD = 1,\n  BACKWARD = -1,\n}\n\n/**\n * Progress Bar status\n */\nexport enum PROGRESS_BAR_STATUS {\n  COMPLETE = 'complete',\n  CURRENT = 'current',\n}\n\nexport enum ACTION {\n  CALL = 'call',\n  HYBRID = 'hybrid',\n  ONLINE = 'online',\n}\n\nexport enum ACTION_TYPE {\n  RESET = 'RESET',\n  UPDATE = 'UPDATE',\n}\n\nexport enum DATE_UNIT {\n  DAY = 'day',\n  MONTH = 'month',\n  YEAR = 'year',\n}\n\nexport enum MODE {\n  DEV = 'dev',\n  EDIT = 'edit',\n  VIEW = 'view'\n}\n\nexport enum CSS_CLASS {\n  BASE = 'usds-q',\n  DEV_PANEL_SECTION = 'usds-q-dev-panel',\n  DOB = 'usds-q-dob',\n  MULTI_CHOICE = 'usds-q-multi-choice',\n  MULTI_CHOICE_GROUP = 'usds-q-multi-choice-group',\n  MULTI_SELECT = 'usds-q-multi-select',\n  MULTI_SELECT_GROUP = 'usds-q-multi-select-group',\n  NAVBAR = 'usds-q-navbar',\n  NAVBAR_BUTTON = 'usds-q-navbar-button',\n  PROGRESS_BAR = 'usds-q-progress-bar',\n  PROGRESS_BAR_BOTTOM_SECTION = 'usds-q-progress-bar-bottom-section',\n  PROGRESS_BAR_TOP_SECTION = 'usds-q-progress-bar-top-section',\n  RESULTS_SUMMARY_BOX = 'usds-q-results-summary-box',\n  RESULTS_SUMMARY_HEADER = 'usds-q-results-summary-header',\n  STEP_FOOTER = 'usds-q-step-footer',\n  STEP_HEADER = 'usds-q-step-header',\n  STEP_INFO = 'usds-q-step-info',\n  STEP_LAYOUT = 'usds-q-step-layout',\n  STEP_LAYOUT_SECTION = 'usds-q-step-layout-section',\n  STEP_SUBTITLE = 'usds-q-step-subtitle'\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isEnum = (enm: object, value: string): boolean =>\n  Object.values(enm).includes(value);\n","import { TAge }                 from '../lib/types';\nimport { IAnswer, IAnswerList } from '../survey/IAnswer';\n\nexport class Answer implements IAnswer {\n  public readonly started: Date;\n\n  finished?: Date;\n\n  public birthdate?: string;\n\n  public age?: TAge;\n\n  public answers: IAnswerList = {};\n\n  constructor(form: Partial<Answer> = {}) {\n    Object.assign(this, form);\n    this.started = new Date();\n  }\n}\n","import React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useContext,\n  useState,\n} from 'react';\nimport { QuestionableConfig } from '../composable/Config';\nimport { Questionnaire }      from '../composable/Questionnaire';\n\nexport interface IQuestionable {\n  config?: QuestionableConfig;\n  questionnaire?: Questionnaire;\n}\n\nconst GlobalStateContext = createContext({\n  setState: {} as Dispatch<SetStateAction<Partial<IQuestionable>>>,\n  state:    {} as Partial<IQuestionable>,\n});\n\ntype TGlobalStateContext = {\n  setState: React.Dispatch<React.SetStateAction<Partial<IQuestionable>>>;\n  state: Partial<IQuestionable>;\n};\n\nconst useGlobalState = (): TGlobalStateContext => {\n  const context = useContext(GlobalStateContext);\n  if (!context) {\n    throw new Error('useGlobalState must be used within a GlobalStateContext');\n  }\n  return context;\n};\n\nexport const GlobalStateProvider = ({\n  children,\n  value = {} as IQuestionable,\n}: {\n  children: React.ReactNode;\n  value?: Partial<IQuestionable>;\n}): JSX.Element => {\n  const [state, setState] = useState(value);\n  return (\n    <GlobalStateContext.Provider value={{ setState, state }}>\n      {children}\n    </GlobalStateContext.Provider>\n  );\n};\n\nconst useQuestionnaire = (): Questionnaire => {\n  const { questionnaire } = useGlobalState().state;\n\n  if (!questionnaire) {\n    throw new Error('useQuestionnaire has no data');\n  }\n  return questionnaire;\n};\n\nconst useConfig = (): QuestionableConfig => {\n  const { config } = useGlobalState().state;\n\n  if (!config) {\n    throw new Error('useConfig has no data');\n  }\n  return config;\n};\n\nexport interface IGlobalState {\n  config: QuestionableConfig;\n  questionnaire: Questionnaire;\n}\n\nexport const useGlobal = (): IGlobalState => ({\n  config:        useConfig(),\n  questionnaire: useQuestionnaire(),\n});\n","import { merge }       from 'lodash';\nimport { ACTION_TYPE } from '../lib/enums';\nimport { IAnswer }     from '../survey/IAnswer';\nimport { Answer }      from '../composable/Answer';\n\n/**\n * Merges the form's answer state as the user progresses through the survey\n * @param previousState\n * @param action\n * @returns\n */\nexport const stepReducer = (\n  previousState: IAnswer,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  action: { type: ACTION_TYPE; value: any },\n): IAnswer => {\n  // Action should never be null,\n  // except when we attempt to storybook/test individual components in isolation\n  switch (action?.type) {\n    case ACTION_TYPE.RESET:\n      return new Answer();\n\n    case ACTION_TYPE.UPDATE:\n      return merge(\n        {\n          ...previousState,\n        },\n        {\n          ...action.value,\n        },\n      );\n\n    default:\n      return previousState;\n  }\n};\n","import { DateTime } from 'luxon';\nimport { TAge }     from './types';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst moment = require('moment');\n\n/**\n * Determines if a string can be parsed into a valid Date\n * @param dt\n * @returns\n */\nexport const isValidDate = (dt: string | undefined): boolean => {\n  if (!dt || dt.length < 8) return false;\n  if (!moment(dt, 'MM/DD/YYYY', true).isValid()) return false;\n  return true;\n};\n\n/**\n * Gets a luxon DateTime object from a date string\n * @param dt DateTime as string- should always be in the format `MM/DD/YYYY`\n * @returns DateTime or undefined\n */\nexport const getDateTime = (dt: string): DateTime | undefined => {\n  if (!isValidDate(dt)) return undefined;\n  const date = new Date(\n    +dt.substring(6, 10),\n    +dt.substring(0, 2) - 1,\n    +dt.substring(3, 5),\n  );\n  return DateTime.fromJSDate(date);\n};\n\n/**\n * Gets an age from a DateTime object\n * @param dob - luxon DateTime\n * @returns an age with years, months, days\n */\nexport const getDateTimeAge = (dob: DateTime): TAge => {\n  const now = DateTime.now();\n\n  const yearNow  = now.year;\n  const monthNow = now.month;\n  const dateNow  = now.day;\n\n  const yearDob  = dob.year;\n  const monthDob = dob.month;\n  const dateDob  = dob.day;\n\n  let years  = yearNow - yearDob;\n  let months = 0;\n\n  if (monthNow >= monthDob) {\n    months = monthNow - monthDob;\n  } else {\n    years -= 1;\n    months = 12 + monthNow - monthDob;\n  }\n\n  let days = 0;\n  if (dateNow >= dateDob) {\n    days = dateNow - dateDob;\n  } else {\n    // eslint-disable-next-line no-multi-spaces\n    days    = 31 + dateNow - dateDob;\n    months += -1;\n    if (months < 0) {\n      months = 11;\n      years -= 1;\n    }\n  }\n\n  return {\n    days,\n    months,\n    years,\n  };\n};\n\n/**\n * Parses a date/time string and returns an Age object\n * @param dateOfBirth - should always be in the format `MM/DD/YYYY`\n * @returns an age, if the date is valid\n */\nexport const getAge = (dateOfBirth: string | undefined): TAge | undefined => {\n  if (!dateOfBirth || !isValidDate(dateOfBirth)) return undefined;\n\n  const dob = getDateTime(dateOfBirth);\n  if (!dob) return undefined;\n\n  return getDateTimeAge(dob);\n};\n","import { IPage, IPages } from '../survey/IStep';\nimport { PAGE_TYPE }     from './enums';\n\n/**\n * Default landing step if none is defined\n */\nconst landingPage: IPage = {\n  buttons: {\n    next: {\n      label: 'Get Started',\n    },\n  },\n  id:        PAGE_TYPE.LANDING,\n  sectionId: PAGE_TYPE.LANDING,\n  title:     PAGE_TYPE.LANDING,\n  type:      PAGE_TYPE.LANDING,\n};\n\n/**\n * Default result step if none is defined\n */\nconst resultsPage: IPage = {\n  id:        PAGE_TYPE.RESULTS,\n  sectionId: PAGE_TYPE.RESULTS,\n  title:     PAGE_TYPE.RESULTS,\n  type:      PAGE_TYPE.RESULTS,\n};\n\n/**\n * Default no results step if none is defined\n */\nconst noResultsPage: IPage = {\n  id:        PAGE_TYPE.NO_RESULTS,\n  sectionId: PAGE_TYPE.RESULTS,\n  title:     PAGE_TYPE.NO_RESULTS,\n  type:      PAGE_TYPE.NO_RESULTS,\n};\n\n/**\n * Default result step if none is defined\n */\nconst summaryPage: IPage = {\n  buttons: {\n    next: {\n      label: 'Submit',\n    },\n  },\n  id:        PAGE_TYPE.SUMMARY,\n  sectionId: PAGE_TYPE.RESULTS,\n  title:     PAGE_TYPE.SUMMARY,\n  type:      PAGE_TYPE.SUMMARY,\n};\n\nexport const DEFAULT_PAGES: IPages = {\n  landingPage,\n  noResultsPage,\n  resultsPage,\n  summaryPage,\n};\n","/*\n  eslint-disable no-console,\n                 @typescript-eslint/no-explicit-any,\n                 @typescript-eslint/explicit-module-boundary-types,\n*/\n\n/**\n * Logs to the console. All arguments logged as an object.\n * @param params\n * @returns\n */\nexport const log = (...params: any) => console.log({ ...params });\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { log } from './log';\n\n/**\n * Generic no-operation\n */\nexport const noop = (): void => { };\n\n/**\n * Generic no-element\n * @returns empty element\n */\nexport const noel = (message = '', context = ''): JSX.Element => {\n  if (message || context) {\n    log('Created an empty element', message, context);\n  }\n  return (<>{message}</>);\n};\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import { SiteAlert }              from '@trussworks/react-uswds';\nimport FileSaver                  from 'file-saver';\nimport { QuestionableConfig }     from '../../composable/Config';\nimport { ACTION_TYPE, CSS_CLASS } from '../../lib/enums';\nimport { noel }                   from '../../lib/noop';\nimport { IStepData }              from '../../survey/IStepData';\n\nexport abstract class Wizard {\n  public static getHeader(\n    props: IStepData,\n    config: QuestionableConfig,\n  ): JSX.Element {\n    let text = props.step?.title;\n    if (!text) {\n      return noel();\n    }\n\n    if (config.steps.showStepId) {\n      text = `${props.step?.id}: ${text}`;\n    }\n    return <h3 className={`usa-card__heading ${CSS_CLASS.STEP_HEADER}`}>{text}</h3>;\n  }\n\n  public static getSubtitle(props: IStepData): JSX.Element {\n    const text = props.step?.subTitle;\n    if (!text) {\n      return noel();\n    }\n    return (\n      <p className={CSS_CLASS.STEP_SUBTITLE} dangerouslySetInnerHTML={{ __html: text }} />\n    );\n  }\n\n  public static getInfoBox(props: IStepData): JSX.Element {\n    const text = props.step?.info;\n    if (!text) {\n      return noel();\n    }\n    return (\n      <SiteAlert variant=\"info\" showIcon={false} className={`outline-1px ${CSS_CLASS.STEP_INFO}`}>\n        {text}\n      </SiteAlert>\n    );\n  }\n\n  public static getFooter(props: IStepData): JSX.Element {\n    const text = props.step?.footer;\n    if (!text) {\n      return noel();\n    }\n    return (\n      <p\n        className={`font-sans-6 ${CSS_CLASS.STEP_FOOTER}`}\n        dangerouslySetInnerHTML={{ __html: text }}\n       />\n    );\n  }\n\n  public static resetQuestionable(props: IStepData): void {\n    props.dispatchForm({\n      type: ACTION_TYPE.RESET,\n    });\n    props.wizard.goToStep('A');\n  }\n\n  // eslint-disable-next-line max-len\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\n  public static saveAsJson(data: any, fileName = 'questionable.json'): void {\n    const blob = new Blob([data], { type: 'text/plain;charset=utf-8' });\n    FileSaver.saveAs(blob, fileName);\n  }\n}\n","import { Accordion, Button } from '@trussworks/react-uswds';\nimport { CSS_CLASS }         from '../../lib';\nimport { noel }              from '../../lib/noop';\nimport { useGlobal }         from '../../state/GlobalState';\nimport { IStepData }         from '../../survey/IStepData';\nimport { Wizard }            from '../lib/Wizard';\n\nexport const DevPanel = (props: IStepData): JSX.Element => {\n  const { config } = useGlobal();\n\n  if (!config.dev) {\n    return noel();\n  }\n\n  const reset = () => Wizard.resetQuestionable(props);\n\n  return (\n    <>\n      <Accordion\n        items={[\n          {\n            content: (\n              <pre>\n                <code>{JSON.stringify(props.form, null, 4)}</code>\n              </pre>\n            ),\n            expanded: false,\n            id:       'developer-output',\n            title:    'Temporary developer panel',\n          },\n        ]}\n      />\n      <br></br>\n      <nav className={CSS_CLASS.NAVBAR}>\n        <Button type=\"reset\" secondary onClick={reset}>\n          Reset\n        </Button>\n      </nav>\n    </>\n  );\n};\n","import PB            from '@ramonak/react-progress-bar';\nimport { useGlobal } from '../../state/GlobalState';\nimport { IStepData } from '../../survey/IStepData';\nimport { noel }      from '../../lib/noop';\nimport { CSS_CLASS } from '../../lib';\n\nexport const ProgressBar = (props: IStepData): JSX.Element => {\n  const { config, questionnaire } = useGlobal();\n\n  if (config.progressBar.hide) {\n    return noel();\n  }\n\n  const completed = questionnaire.getProgressPercent(props, config);\n\n  return (\n    <div className={CSS_CLASS.PROGRESS_BAR}>\n      <PB\n        completed={completed}\n        bgColor={config.progressBar.bgColor}\n        baseBgColor={config.progressBar.baseBgColor}\n        isLabelVisible={false}\n        borderRadius={'0px'}\n      />\n    </div>\n  );\n};\n","import { StepIndicator as SI, StepIndicatorStep } from '@trussworks/react-uswds';\nimport { useGlobal }                              from '../../state/GlobalState';\nimport { IStepData }                              from '../../survey/IStepData';\nimport { ISection }                               from '../../survey/ISection';\nimport { noel }                                   from '../../lib/noop';\n\nconst getIndicatorStep = (s: ISection) => (\n    <StepIndicatorStep key={s.id} label={s.name} status={s.status || 'incomplete'} />\n);\n\nexport const StepIndicator = (props: IStepData): JSX.Element => {\n  const { config, questionnaire } = useGlobal();\n\n  if (config.progressBar.hide) {\n    return noel();\n  }\n\n  const sections = questionnaire.getSections(props, config);\n  if (sections.length === 0) {\n    return noel();\n  }\n\n  return (\n    <SI centered counters=\"small\">\n      {sections.map(getIndicatorStep)}\n    </SI>\n  );\n};\n","import { ProgressBar }       from '../wizard/ProgressBar';\nimport { StepIndicator }     from '../wizard/StepIndicator';\nimport { noel }              from '../../lib/noop';\nimport { useGlobal }         from '../../state/GlobalState';\nimport { IStepData }         from '../../survey/IStepData';\nimport { TVerticalPosition } from '../../lib/types';\n\nexport const ProgressFactory = ({ props, position }:\n  { position: TVerticalPosition, props: IStepData }): JSX.Element => {\n  const { config } = useGlobal();\n\n  if (config.progressBar.hide || config.progressBar.position !== position) {\n    return noel();\n  }\n  switch (config.progressBar.type) {\n    case 'progress-bar':\n      return <ProgressBar {...props}/>;\n    case 'step-indicator':\n      return <StepIndicator {...props} />;\n    default:\n      return noel('Could not find progress type', config.progressBar.type);\n  }\n};\n","import { kebabCase, values }        from 'lodash';\nimport { QuestionableConfig }       from '../../composable/Config';\nimport { QUESTION_TYPE, STEP_TYPE } from '../../lib/enums';\nimport { Questionnaire }            from '../../composable/Questionnaire';\nimport { IAnswer }                  from '../../survey/IAnswer';\nimport { IQuestionData, IStepData } from '../../survey/IStepData';\n\nexport abstract class Steps {\n  public static goToStep(step: string, props: IStepData): void {\n    props.wizard.goToStep(step);\n  }\n\n  public static goToNextStep(\n    props: IStepData,\n    questionnaire: Questionnaire,\n    config: QuestionableConfig,\n  ): void {\n    Steps.goToStep(questionnaire.getNextStep(props, config), props);\n  }\n\n  public static goToPrevStep(\n    props: IStepData,\n    questionnaire: Questionnaire,\n    config: QuestionableConfig,\n  ): void {\n    Steps.goToStep(questionnaire.getPreviousStep(props, config), props);\n  }\n\n  /**\n   * Determines whether the user should be allowed to continue\n   * @param props\n   * @returns\n   */\n  public static isNextEnabled(props: IStepData): boolean {\n    if (!props?.step) throw new Error('This survery is not defined');\n\n    if (props.stepId === STEP_TYPE.LANDING) return true;\n\n    if (props.stepId === STEP_TYPE.SUMMARY) return true;\n\n    if (!props.form) return false;\n    // KLUDGE Alert: this is not an elegant way to solve this\n    if (props.step?.type === QUESTION_TYPE.DOB) {\n      return undefined !== props.form?.age?.years && props.form.age.years >= 0;\n    }\n    return Steps.isValid(props.form, props.step.id);\n  }\n\n  public static isValid(form: IAnswer, question: string): boolean {\n    if (!form.answers[question]) return false;\n    const q       = form.answers[question];\n    const answers = values(q.answers);\n    switch (q.type) {\n      case STEP_TYPE.DOB:\n        return undefined !== form?.age?.years && form.age.years > 0;\n      case STEP_TYPE.MULTIPLE_CHOICE:\n        return q.answer !== undefined && answers?.indexOf(q.answer) !== -1;\n      default:\n        return true;\n    }\n  }\n\n  public static getFieldSetName(props: IQuestionData): string {\n    return kebabCase(props.step.title);\n  }\n\n  public static getDomId(answer: string, props: IQuestionData): string {\n    const name = Steps.getFieldSetName(props);\n    return `${name}-${kebabCase(answer)}`;\n  }\n}\n","import { Button as B } from '@trussworks/react-uswds';\nimport {\n  CSS_CLASS,\n  MODE,\n  STEP_TYPE,\n  TButtonMode,\n  TVerticalPosition,\n} from '../../lib';\nimport { noel }      from '../../lib/noop';\nimport { useGlobal } from '../../state/GlobalState';\nimport { IStepData } from '../../survey/IStepData';\nimport { Steps }     from '../lib/Steps';\n\ntype TButtonConfig = {\n  dir: 'next' | 'prev';\n  disabled: () => boolean;\n  label: string;\n  mode: TButtonMode;\n  onClick: () => void,\n  stepId: string;\n}\n\nconst Button = (props: TButtonConfig): JSX.Element => (\n  <B\n    className={`${CSS_CLASS.NAVBAR_BUTTON} ${CSS_CLASS.NAVBAR_BUTTON}-${props.dir}`}\n    data-testid={`${props.dir}-button-${props.stepId}`}\n    disabled={props.disabled()}\n    onClick={props.onClick}\n    type=\"button\"\n    unstyled={props.mode === 'link'}\n    outline={props.mode !== 'link' && props.dir === 'prev'}\n  >\n    {props.label}\n  </B>\n);\n\ninterface INavBar extends IStepData {\n  verticalPos: TVerticalPosition;\n}\n\nexport const PreviousButton = (props: INavBar): JSX.Element => {\n  const { questionnaire, config } = useGlobal();\n\n  const { step }       = props;\n  const layoutMismatch = props.verticalPos !== config.nav.prev.verticalPos;\n  const surveyStart    = props.stepId === STEP_TYPE.LANDING\n    || props.stepId === questionnaire.flow[1];\n  const surveyEnd      = props.stepId === STEP_TYPE.RESULTS\n    || props.stepId === STEP_TYPE.NO_RESULTS;\n  const notEditMode    = config.mode !== MODE.EDIT\n    || (props.stepId === questionnaire.flow[0]\n    && config.mode === MODE.EDIT);\n  const doNotRender    = layoutMismatch\n    || ((surveyStart || surveyEnd)\n    && notEditMode);\n\n  if (doNotRender) {\n    return noel();\n  }\n\n  const label    = step?.buttons?.prev?.label || config.nav.prev.defaultLabel || 'Previous';\n  const onClick  = () => Steps.goToPrevStep(props, questionnaire, config);\n  const disabled = () => false;\n\n  return (\n    <Button {...\n      {\n        dir:    'prev',\n        disabled,\n        label,\n        mode:   config.nav.prev.mode || 'link',\n        onClick,\n        stepId: `${props.stepId}`,\n      }\n    }/>\n  );\n};\n\nexport const NextButton = (props: INavBar): JSX.Element => {\n  const { questionnaire, config } = useGlobal();\n  const { step }                  = props;\n  const layoutMismatch            = props.verticalPos !== config.nav.next.verticalPos;\n  const surveyEnd                 = props.stepId === STEP_TYPE.RESULTS\n    || props.stepId === STEP_TYPE.NO_RESULTS;\n  const notEditMode               = config.mode !== MODE.EDIT\n    || (props.stepId === questionnaire.flow[questionnaire.flow.length - 1]\n      && config.mode === MODE.EDIT);\n  const doNotRender               = layoutMismatch\n    || ((surveyEnd) && notEditMode);\n\n  if (doNotRender) {\n    return noel();\n  }\n\n  const label    = step?.buttons?.next?.label || config.nav.next.defaultLabel || 'Previous';\n  const onClick  = () => Steps.goToNextStep(props, questionnaire, config);\n  const disabled = () => config.mode === MODE.VIEW && !Steps.isNextEnabled(props);\n\n  return (\n    <Button {...\n      {\n        dir:    'next',\n        disabled,\n        label,\n        mode:   config.nav.next.mode || 'button',\n        onClick,\n        stepId: `${props.stepId}`,\n      }\n    }/>\n  );\n};\n","import { NextButton, PreviousButton } from './Button';\nimport { TVerticalPosition }          from '../../lib';\nimport { CSS_CLASS }                  from '../../lib/enums';\nimport { IStepData }                  from '../../survey/IStepData';\n\ninterface INavBar extends IStepData {\n  verticalPos: TVerticalPosition;\n}\n\n/**\n * Generates the Previous/Next buttons for Wizard navigation\n * @param props\n * @returns\n */\nexport const NavBar = (props: INavBar): JSX.Element => (\n  <nav className={`${CSS_CLASS.NAVBAR} ${CSS_CLASS.NAVBAR}-${props.verticalPos}`}>\n    <PreviousButton {...props} />\n    <NextButton {...props} />\n  </nav>\n);\n","import {\n  Card, CardBody, CardFooter, CardGroup, CardHeader,\n} from '@trussworks/react-uswds';\nimport { IStepData } from '../../survey/IStepData';\nimport { NavBar }    from './NavBar';\nimport { useGlobal } from '../../state/GlobalState';\n\n/**\n * Generates the Card layout for each step's contents\n * @param props\n * @returns\n */\nexport const DesignLayout = (props: IStepData): JSX.Element => {\n  const { questionnaire } = useGlobal();\n\n  return (\n    <div>\n      <NavBar {...{ ...props, verticalPos: 'top' }} />\n      <section>\n        <CardGroup>\n          <Card\n            headerFirst\n            gridLayout={{ tablet: { col: 12 } }}\n            containerProps={{ className: 'border-ink' }}\n          >\n            <CardHeader className=\"bg-base-lightest\">\n              <h1>Edit the {questionnaire.header}</h1>\n            </CardHeader>\n            <CardBody className=\"padding-top-3\">{props.children}</CardBody>\n            <CardFooter>\n              {'Click \"Save\" to save your edits, or \"Next\" to continue editing'}\n            </CardFooter>\n          </Card>\n        </CardGroup>\n      </section>\n    </div>\n  );\n};\n","// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst surveyData = require('./survey.json');\n\nexport const surveySchema = surveyData;\n","import { merge }                            from 'lodash';\nimport { isEnum, PAGE_TYPE, QUESTION_TYPE } from '../lib/enums';\nimport { IPageData, IQuestionData }         from '../survey/IStepData';\nimport { surveySchema as survey }           from './index';\n\nconst schemaPart = {\n  properties: {\n    step: {\n      $ref:  '#/definitions/IStep',\n      title: 'Step',\n    },\n  },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst schemaFull: any = {\n  type: 'object',\n  ...schemaPart,\n  // eslint-disable-next-line dot-notation\n  ...survey,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getStepSchema = (props: IQuestionData | IPageData): any => {\n  const schemaProps = { ...schemaPart };\n  if (isEnum(PAGE_TYPE, props.step.type)) {\n    schemaProps.properties.step.$ref = '#/definitions/IPage';\n  } else if (isEnum(QUESTION_TYPE, props.step.type)) {\n    schemaProps.properties.step.$ref = '#/definitions/IQuestion';\n  }\n  return merge(schemaProps, schemaFull);\n};\n","import { ReactNode }    from 'react';\nimport { IGlobalState } from '../../state/GlobalState';\nimport { IResult }      from '../../survey/IResult';\nimport { IStepData }    from '../../survey/IStepData';\n\n/**\n * Static utility methods for page components\n */\nexport abstract class Pages {\n  /**\n   * Internal method to compute reason for a result\n   * @param props\n   * @param result\n   * @returns\n   */\n  static getReason(props: IStepData, result: IResult, global: IGlobalState): string {\n    let reason                      = result.match?.explanation;\n    const { questionnaire, config } = global;\n\n    if (!reason) {\n      return '';\n    }\n\n    if (config?.dev && result.match) {\n      reason += '<br><br>';\n      if (\n        result.match.ageCalc !== undefined\n        || result.match.minAge !== undefined\n        || result.match.maxAge !== undefined\n      ) {\n        reason += `You are ${props.form.age?.years} years `;\n        reason += `and ${props.form.age?.months} months old. `;\n      }\n      Object.keys(result.match.answers).forEach((id) => {\n        const q = questionnaire.getQuestionById(id);\n        reason += `You answered \"<b>${q.answer}</b>\" to the question \"<i>${q.title}.</i>\" `;\n      });\n    }\n    return reason;\n  }\n\n  /**\n   * Internal method to generate list of results\n   * @param props\n   * @returns\n   */\n  static getResults(props: IStepData, global: IGlobalState): ReactNode {\n    const { questionnaire } = global;\n    return (questionnaire.getResults(props.form).map((result) => (\n      <li key={`${props.stepId}_${result.id}`} className=\"padding-bottom-2\">\n        <span>\n          {result.label}:{'  '}\n          <b>{result.name}</b>\n        </span>\n        <div\n          className=\"text-light\"\n          dangerouslySetInnerHTML={{ __html: Pages.getReason(props, result, global) }}\n        />\n      </li>\n    )));\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { Checkbox, Fieldset, Radio } from '@trussworks/react-uswds';\nimport { DateTime }                  from 'luxon';\nimport { ACTION_TYPE, CSS_CLASS }    from '../../lib/enums';\nimport { IQuestionData }             from '../../survey/IStepData';\nimport { Steps }                     from './Steps';\nimport { getDateTime }               from '../../lib/date';\nimport { TDateOfBirth }              from '../../lib/types';\nimport { IQuestionableConfig }       from '../../survey';\n\n/**\n * Static utility methods for question components\n */\nexport abstract class Questions {\n  /**\n   * Updates the form with the current selected answer(s)\n   * @param answer\n   * @param props\n   * @returns\n   */\n  private static updateForm(answer: string, props: IQuestionData): void {\n    Object.assign(props.step, { answer });\n    const value = {\n      answers: {\n        [props.step.id]: props.step,\n      },\n    };\n    return props.dispatchForm({\n      type: ACTION_TYPE.UPDATE,\n      value,\n    });\n  }\n\n  /**\n   * Determines if the answer is valid and selected\n   * @param answer\n   * @param props\n   * @returns\n   */\n  private static isSelected(answer: string, props: IQuestionData): boolean | undefined {\n    if (!props?.form) {\n      return undefined;\n    }\n    const q = props.form.answers[props.step.id];\n    return Steps.isValid(props.form, props.step.id) && q.answer === answer;\n  }\n\n  /**\n   * Generates a radio button given a question definition\n   * @param answer\n   * @param props\n   * @returns\n   */\n  private static getRadio(\n    answer: string,\n    props: IQuestionData,\n    config: IQuestionableConfig,\n  ): JSX.Element {\n    const handler = () => Questions.updateForm(answer, props);\n    const id      = Steps.getDomId(answer, props);\n\n    return (\n      <Radio\n        id={id}\n        key={id}\n        name={Steps.getFieldSetName(props)}\n        label={answer}\n        value={answer}\n        checked={Questions.isSelected(answer, props) === true}\n        className={CSS_CLASS.MULTI_CHOICE}\n        onChange={handler}\n        onClick={handler}\n        tile={config.questions?.showAnswerBorder === true}\n      />\n    );\n  }\n\n  /**\n   * Gets a collection of radio buttons\n   * @param props\n   * @returns\n   */\n  public static getRadios(props: IQuestionData, config: IQuestionableConfig): JSX.Element {\n    return (<Fieldset\n      legend={props.step.title}\n      className={CSS_CLASS.MULTI_CHOICE_GROUP}\n      legendStyle=\"srOnly\"\n    >\n      {\n        Object.keys(props.step.answers).map((a) =>\n          Questions.getRadio(props.step.answers[+a], props, config))\n      }\n    </Fieldset>);\n  }\n\n  /**\n   * Generates a checkbox given a question definition\n   * @param answer\n   * @param props\n   * @returns\n   */\n  private static getCheckbox(\n    answer: string,\n    props: IQuestionData,\n    config: IQuestionableConfig,\n  ): JSX.Element {\n    const handler = () => Questions.updateForm(answer, props);\n    const id      = Steps.getDomId(answer, props);\n\n    return (\n      <Checkbox\n        id={id}\n        key={id}\n        name={Steps.getFieldSetName(props)}\n        label={answer}\n        value={answer}\n        checked={Questions.isSelected(answer, props) === true}\n        className={CSS_CLASS.MULTI_SELECT}\n        onChange={handler}\n        onClick={handler}\n        tile={config.questions?.showAnswerBorder === true}\n      />\n    );\n  }\n\n  /**\n * Gets a collection of checkboxes\n * @param props\n * @returns\n */\n  public static getCheckboxes(props: IQuestionData, config: IQuestionableConfig): JSX.Element {\n    return (\n      <Fieldset\n        legend={props.step.title}\n        className={CSS_CLASS.MULTI_SELECT_GROUP}\n        legendStyle=\"srOnly\"\n      >\n      {\n        Object.keys(props.step.answers).map((a) =>\n          Questions.getCheckbox(props.step.answers[+a], props, config))\n      }\n      </Fieldset>\n    );\n  }\n\n  /**\n   * Gets a birthdate's DateTime from a form\n   * @param props\n   * @returns\n   */\n  public static getBirthdate(props: IQuestionData): DateTime | undefined {\n    if (props.form?.birthdate) {\n      return getDateTime(props.form.birthdate);\n    }\n    return undefined;\n  }\n\n  /**\n   * Converts a Date of Birth type into a string\n   * @param dob\n   * @returns\n   */\n  public static toBirthdate(dob: TDateOfBirth): string | undefined {\n    if (dob.month && dob.day && dob.year) {\n      return `${dob.month.padStart(2, '0')}/${dob.day.padStart(2, '0')}/${\n        dob.year\n      }`;\n    }\n    return undefined;\n  }\n}\n","import Form                         from '@rjsf/semantic-ui';\nimport { Button }                   from '@trussworks/react-uswds';\nimport { kebabCase }                from 'lodash';\nimport { IPageData, IQuestionData } from '../../survey/IStepData';\nimport { DesignLayout }             from '../wizard/DesignLayout';\nimport { getStepSchema }            from '../../schema/edit';\nimport { Wizard }                   from '../lib';\nimport { useGlobal }                from '../../state/GlobalState';\n\n/**\n * Renders a question and a radio list of allowed answers\n * @param props\n * @returns\n */\nexport const Edit = (props: IQuestionData | IPageData): JSX.Element => {\n  const { questionnaire } = useGlobal();\n  const schema            = getStepSchema(props);\n  const fileName          = kebabCase(questionnaire.header);\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  const onSubmit = ({ formData }: any) => {\n    Wizard.saveAsJson(formData, `${fileName}.json`);\n  };\n  return (\n      <Form\n        schema={schema}\n        uiSchema={{\n          step: {\n            'ui:order': [\n              'title',\n              'subTitle',\n              'bodyHeader',\n              'bodySubHeader',\n              'body',\n              'info',\n              'footer',\n              '*',\n            ],\n          },\n        }}\n        onSubmit={onSubmit}\n        formData={{ step: props.step }}\n      >\n        <div>\n          <Button type=\"submit\">Save</Button>\n        </div>\n      </Form>\n  );\n};\n\n/**\n * Renders a question and a radio list of allowed answers\n * @param props\n * @returns\n */\nexport const EditStep = (props: IQuestionData | IPageData): JSX.Element => (\n  <DesignLayout {...props}>\n    <Edit {...props} />\n  </DesignLayout>\n);\n","import {\n  Card, CardBody, CardFooter, CardGroup, CardHeader,\n} from '@trussworks/react-uswds';\nimport { IStepData } from '../../survey/IStepData';\nimport { NavBar }    from './NavBar';\nimport { Wizard }    from '../lib/Wizard';\nimport { useGlobal } from '../../state/GlobalState';\nimport { CSS_CLASS } from '../../lib';\n\n/**\n * Generates the Card layout for each step's contents\n * @param props\n * @returns\n */\nexport const StepLayout = (props: IStepData): JSX.Element => {\n  const { config }                  = useGlobal();\n  const { borderClass, titleClass } = config.steps;\n\n  return (\n    <div>\n      <NavBar {...{ ...props, verticalPos: 'top' }} />\n      <section className={CSS_CLASS.STEP_LAYOUT}>\n        <CardGroup>\n          <Card\n            headerFirst\n            gridLayout={{ tablet: { col: 12 } }}\n            containerProps={{ className: borderClass }}\n          >\n            <CardHeader className={titleClass}>\n              {Wizard.getHeader(props, config)}\n            </CardHeader>\n            <CardBody>\n              {Wizard.getSubtitle(props)}\n              {props.children}\n              {Wizard.getInfoBox(props)}\n            </CardBody>\n            <CardFooter>\n              {Wizard.getFooter(props)}\n            </CardFooter>\n          </Card>\n        </CardGroup>\n      </section>\n      <NavBar {...{ ...props, verticalPos: 'bottom' }} />\n    </div>\n  );\n};\n","import { noel }       from '../../lib/noop';\nimport { IPageData }  from '../../survey/IStepData';\nimport { StepLayout } from '../wizard/StepLayout';\n\n/**\n * Generates the first/initial/landing page of the Wizard\n * @param props\n * @returns\n */\nexport const LandingPage = (props: IPageData): JSX.Element => {\n  const { step } = props;\n  if (!step) {\n    return noel();\n  }\n\n  return (\n    <StepLayout {...props}>\n      <p>{step.body}</p>\n    </StepLayout>\n  );\n};\n","import { noel }       from '../../lib/noop';\nimport { IPageData }  from '../../survey/IStepData';\nimport { StepLayout } from '../wizard/StepLayout';\n\n/**\n * Displays the wizard results\n * @param props\n * @returns\n */\nexport const NoResultsPage = (props: IPageData): JSX.Element => {\n  const { step: page } = props;\n  if (!page) {\n    return noel();\n  }\n\n  return (\n    <StepLayout {...props}>\n    </StepLayout>\n  );\n};\n","import { SummaryBox } from '@trussworks/react-uswds';\nimport { IPageData }  from '../../survey/IStepData';\nimport { StepLayout } from '../wizard/StepLayout';\nimport { Pages }      from '../lib';\nimport { useGlobal }  from '../../state/GlobalState';\nimport { noel }       from '../../lib/noop';\nimport { CSS_CLASS }  from '../../lib';\n\n/**\n * Displays the wizard results\n * @param props\n * @returns\n */\nexport const ResultsPage = (props: IPageData): JSX.Element => {\n  const { step }          = props;\n  const global            = useGlobal();\n  const { questionnaire } = global;\n\n  if (!step) {\n    return noel();\n  }\n\n  const action = questionnaire.getAction();\n\n  return (\n    <StepLayout {...props}>\n      <SummaryBox heading={step.bodyHeader || ''} className={CSS_CLASS.RESULTS_SUMMARY_HEADER}>\n        <p>{step.bodySubHeader}</p>\n        <ul\n          className={`usa-list usa-list--unstyled ${CSS_CLASS.RESULTS_SUMMARY_BOX}`}\n        >\n          {Pages.getResults(props, global)}\n        </ul>\n        <p dangerouslySetInnerHTML={{ __html: step?.body || '' }} />\n        <h2>{action.title}</h2>\n        <p>{action.description}</p>\n        <p dangerouslySetInnerHTML={{ __html: action.action }} />.\n      </SummaryBox>\n    </StepLayout>\n  );\n};\n","import { ReactNode }  from 'react';\nimport { noel }       from '../../lib/noop';\nimport { IPageData }  from '../../survey/IStepData';\nimport { StepLayout } from '../wizard/StepLayout';\n\n/**\n * Internal method to generate a list of the survey answers\n * @param props\n * @returns\n */\nconst getAnswers = (props: IPageData): ReactNode => {\n  const answers = Object.keys(props.form.answers).map((key) => (\n    <li key={key} className=\"padding-bottom-2\">\n      <span className=\"text-light\">\n        {props.form.answers[key].title}:&nbsp;&nbsp;\n        <b>{props.form.answers[key].answer}</b>\n      </span>\n    </li>\n  ));\n\n  return <ul className=\"usa-list usa-list--unstyled\">{answers}</ul>;\n};\n\n/**\n * Displays a summary of the wizard prior to showing results\n * @param props\n * @returns\n */\nexport const SummaryPage = (props: IPageData): JSX.Element => {\n  const { step: page } = props;\n  if (!page) {\n    return noel();\n  }\n\n  return <StepLayout {...props}>{getAnswers(props)}</StepLayout>;\n};\n","import { DateInput, DateInputGroup } from '@trussworks/react-uswds';\nimport { capitalize }                from 'lodash';\nimport { ChangeEvent, useState }     from 'react';\nimport { getAge }                    from '../../lib/date';\nimport { ACTION_TYPE, DATE_UNIT }    from '../../lib/enums';\nimport { noel }                      from '../../lib/noop';\nimport { TDateOfBirth }              from '../../lib/types';\nimport { IQuestionData }             from '../../survey/IStepData';\nimport { Questions }                 from '../lib/Questions';\nimport { Steps }                     from '../lib/Steps';\nimport { StepLayout }                from '../wizard/StepLayout';\n\nexport const DateOfBirth = (props: IQuestionData): JSX.Element => {\n  const { step }          = props;\n  const dob: TDateOfBirth = {\n    day:   Questions.getBirthdate(props)?.day?.toString(),\n    month: Questions.getBirthdate(props)?.month?.toString(),\n    year:  Questions.getBirthdate(props)?.year?.toString(),\n  };\n  const [state, setState] = useState(dob);\n\n  if (!step) {\n    return noel();\n  }\n\n  const onDateOfBirthChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    unit: DATE_UNIT,\n  ): void => {\n    const val = e.target.value;\n    if (!val) {\n      return;\n    }\n    state[unit] = val;\n    setState({\n      ...state,\n    });\n    const bd  = Questions.toBirthdate(state);\n    const age = getAge(bd);\n    if (age) {\n      props.dispatchForm({\n        type:  ACTION_TYPE.UPDATE,\n        value: {\n          age,\n          birthdate: bd,\n        },\n      });\n    }\n  };\n\n  const getDateInput = (\n    unit: DATE_UNIT,\n    label: string,\n  ): JSX.Element => {\n    let length = 2;\n    if (unit === DATE_UNIT.YEAR) {\n      length = 4;\n    }\n    return (\n      <DateInput\n        id={Steps.getDomId(unit, props)}\n        name={label}\n        label={capitalize(unit)}\n        unit={unit}\n        maxLength={length}\n        minLength={length}\n        defaultValue={state[unit]}\n        onChange={(e) => onDateOfBirthChange(e, unit)}\n      />);\n  };\n\n  const getDateInputGroup = (label: string): JSX.Element => (\n    <DateInputGroup>\n      {getDateInput(DATE_UNIT.MONTH, label)}\n      {getDateInput(DATE_UNIT.DAY, label)}\n      {getDateInput(DATE_UNIT.YEAR, label)}\n    </DateInputGroup>\n  );\n\n  return getDateInputGroup('date_of_birth');\n};\n\nexport const DateOfBirthStep = (props: IQuestionData): JSX.Element => (\n  <StepLayout {...props}>\n    <DateOfBirth {...props} />\n  </StepLayout>\n);\n","import { noel }          from '../../lib/noop';\nimport { useGlobal }     from '../../state';\nimport { IQuestionData } from '../../survey/IStepData';\nimport { Questions }     from '../lib/Questions';\nimport { StepLayout }    from '../wizard/StepLayout';\n\n/**\n * Renders a question and a radio list of allowed answers\n * @param props\n * @returns\n */\nexport const MultipleChoice = (props: IQuestionData): JSX.Element => {\n  const { config } = useGlobal();\n\n  if (props?.step?.answers === undefined) {\n    return noel('Question and answer are not defined');\n  }\n\n  return Questions.getRadios(props, config);\n};\n\n/**\n * Renders a question and a radio list of allowed answers\n * @param props\n * @returns\n */\nexport const MultipleChoiceStep = (props: IQuestionData): JSX.Element => (\n  <StepLayout {...props}>\n    <MultipleChoice {...props} />\n  </StepLayout>\n);\n","import { noel }          from '../../lib/noop';\nimport { useGlobal }     from '../../state/GlobalState';\nimport { IQuestionData } from '../../survey/IStepData';\nimport { Questions }     from '../lib/Questions';\nimport { StepLayout }    from '../wizard/StepLayout';\n\n/**\n * Renders a question and a checkbox list of allowed answers\n * @param props\n * @returns\n */\nexport const MultipleSelect = (props: IQuestionData): JSX.Element => {\n  const { config } = useGlobal();\n\n  if (props?.step?.answers === undefined) {\n    return noel();\n  }\n\n  return Questions.getCheckboxes(props, config);\n};\n\n/**\n * Renders a question and a checkbox list of allowed answers\n * @param props\n * @returns\n */\nexport const MultipleSelectStep = (props: IQuestionData): JSX.Element => (\n  <StepLayout {...props}>\n    <MultipleSelect {...props} />\n  </StepLayout>\n);\n","import {\n  isEnum, QUESTION_TYPE,\n} from '../../lib/enums';\nimport { noel }                     from '../../lib/noop';\nimport { useGlobal }                from '../../state/GlobalState';\nimport { IQuestionData, IStepData } from '../../survey/IStepData';\nimport {\n  DateOfBirthStep,\n  MultipleChoiceStep,\n  MultipleSelectStep,\n} from '../questions';\n\n/**\n * Given a step of a known question type, generates a question component\n * @param props\n * @returns\n */\nexport const QuestionFactory = (props: IStepData): JSX.Element => {\n  const { stepId }        = props;\n  const { questionnaire } = useGlobal();\n  const step              = questionnaire.getStepById(`${stepId}`);\n\n  if (!isEnum(QUESTION_TYPE, step.type)) {\n    return noel('Not a question');\n  }\n  const question = questionnaire.getQuestionById(step.id);\n  const stepData = { ...{ step: question, ...props } } as IQuestionData;\n  switch (question.type) {\n    case QUESTION_TYPE.DOB:\n      return <DateOfBirthStep {...stepData} />;\n    case QUESTION_TYPE.MULTIPLE_CHOICE:\n      return <MultipleChoiceStep {...stepData} />;\n    case QUESTION_TYPE.MULTIPLE_SELECT:\n      return <MultipleSelectStep {...stepData} />;\n    default:\n      return noel('Question does not exist', 'QuestionFactory');\n  }\n};\n","import {\n  isEnum, MODE, PAGE_TYPE, QUESTION_TYPE,\n} from '../../lib/enums';\nimport { noel }            from '../../lib/noop';\nimport { useGlobal }       from '../../state/GlobalState';\nimport { IStep }           from '../../survey/IStep';\nimport { IStepData }       from '../../survey/IStepData';\nimport { DesignFactory }   from './DesignFactory';\nimport { PageFactory }     from './PageFactory';\nimport { QuestionFactory } from './QuestionFactory';\n\nconst viewFactory = (props: IStepData, step: IStep): JSX.Element => {\n  if (isEnum(QUESTION_TYPE, step.type)) {\n    return QuestionFactory(props);\n  }\n  if (isEnum(PAGE_TYPE, step.type)) {\n    return PageFactory(props);\n  }\n  return noel('Step does not exist', 'StepFactory');\n};\n\n/**\n * Core UI factory for generating steps\n * @param props\n * @returns\n */\nexport const StepFactory = (props: IStepData): JSX.Element => {\n  const { stepId }                = props;\n  const { questionnaire, config } = useGlobal();\n  const step                      = questionnaire.getStepById(`${stepId}`);\n\n  if (config.mode === MODE.EDIT) {\n    return DesignFactory(props, step);\n  }\n  return viewFactory(props, step);\n};\n","import {\n  isEnum, PAGE_TYPE,\n} from '../../lib/enums';\nimport { noel }                 from '../../lib/noop';\nimport { useGlobal }            from '../../state/GlobalState';\nimport { IPageData, IStepData } from '../../survey/IStepData';\nimport {\n  LandingPage,\n  NoResultsPage,\n  ResultsPage,\n  SummaryPage,\n} from '../pages';\n\n/**\n * Given a step of a known page type, returns a page component\n * @param props\n * @returns\n */\nexport const PageFactory = (props: IStepData): JSX.Element => {\n  const { stepId }        = props;\n  const { questionnaire } = useGlobal();\n  const step              = questionnaire.getStepById(`${stepId}`);\n  if (!isEnum(PAGE_TYPE, step.type)) {\n    return noel('Not a page');\n  }\n  const page     = questionnaire.getPageById(step.id);\n  const stepData = { ...{ step: page, ...props } } as IPageData;\n  switch (page.type) {\n    case PAGE_TYPE.LANDING:\n      return <LandingPage {...stepData} />;\n    case PAGE_TYPE.NO_RESULTS:\n      return <NoResultsPage {...stepData} />;\n    case PAGE_TYPE.RESULTS:\n      return <ResultsPage {...stepData} />;\n    case PAGE_TYPE.SUMMARY:\n      return <SummaryPage {...stepData} />;\n    default:\n      return noel('Page does not exist', 'PageFactory');\n  }\n};\n","import { isEnum, PAGE_TYPE, QUESTION_TYPE }    from '../../lib/enums';\nimport { noel }                                from '../../lib/noop';\nimport { useGlobal }                           from '../../state/GlobalState';\nimport { IStep }                               from '../../survey/IStep';\nimport { IPageData, IQuestionData, IStepData } from '../../survey/IStepData';\nimport { EditStep }                            from '../design/Edit';\n/**\n * Given a step of a known question type, generates a question component\n * @param props\n * @returns\n */\nexport const DesignFactory = (props: IStepData, step: IStep): JSX.Element => {\n  const { questionnaire }   = useGlobal();\n  const question            = questionnaire.getStepById(step.id);\n  const stepData: IStepData = { ...{ step: question, ...props } };\n\n  if (isEnum(QUESTION_TYPE, step.type)) {\n    const questionData = stepData as IQuestionData;\n    return <EditStep {...questionData}></EditStep>;\n  }\n  if (isEnum(PAGE_TYPE, step.type)) {\n    const pageData = stepData as IPageData;\n    return <EditStep {...pageData}></EditStep>;\n  }\n  return noel('Not an editable type');\n};\n","import { useReducer }                         from 'react';\nimport { useWizard }                          from 'use-wizard';\nimport { Answer }                             from '../composable/Answer';\nimport { GlobalStateProvider, IQuestionable } from '../state/GlobalState';\nimport { stepReducer }                        from '../state/stepReducer';\nimport { DevPanel }                           from './wizard/DevPanel';\nimport { ProgressFactory }                    from './factories/ProgressFactory';\nimport { StepFactory }                        from './factories/StepFactory';\nimport { CSS_CLASS }                          from '../lib/enums';\n\nexport const Questionable = (q: IQuestionable): JSX.Element => {\n  const { questionnaire } = q;\n  if (!questionnaire) {\n    throw new Error('questionable is undefined');\n  }\n\n  const [step, wizard] = useWizard(questionnaire.flow);\n\n  // This is only used to store user inputs\n  const [form, dispatchForm] = useReducer(stepReducer, new Answer());\n  return (\n    <GlobalStateProvider value={q}>\n      <div className={CSS_CLASS.BASE}>\n        <section className={`section ${CSS_CLASS.PROGRESS_BAR_TOP_SECTION}`}>\n          <ProgressFactory {...{\n            position: 'top',\n            props:    {\n              dispatchForm,\n              form,\n              stepId: step,\n              wizard,\n            },\n          }}/>\n        </section>\n\n        <section className={`section ${CSS_CLASS.STEP_LAYOUT_SECTION}`}>\n          <StepFactory\n            {...{\n              dispatchForm,\n              form,\n              stepId: step,\n              wizard,\n            }}\n          />\n        </section>\n\n        <section className={`section ${CSS_CLASS.PROGRESS_BAR_BOTTOM_SECTION}`}>\n          <ProgressFactory {...{\n            position: 'bottom',\n            props:    {\n              dispatchForm,\n              form,\n              stepId: step,\n              wizard,\n            },\n          }}/>\n        </section>\n\n        <section className={`section ${CSS_CLASS.DEV_PANEL_SECTION}`}>\n          <DevPanel\n            {...{\n              dispatchForm,\n              form,\n              stepId: step,\n              wizard,\n            }}\n          />\n        </section>\n      </div>\n    </GlobalStateProvider>\n  );\n};\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","n","Object","prototype","toString","slice","constructor","name","from","test","unsupportedIterableToArray","TypeError","nonIterableRest","_classCallCheck","instance","Constructor","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","QUESTION_TYPE","PAGE_TYPE","DESIGN_TYPE","Answer","form","assign","this","started","Date","GlobalStateContext","createContext","setState","state","useGlobalState","context","useContext","Error","GlobalStateProvider","children","useState","_jsx","Provider","useQuestionnaire","questionnaire","useConfig","config","useGlobal","DIRECTION","PROGRESS_BAR_STATUS","ACTION","ACTION_TYPE","DATE_UNIT","MODE","CSS_CLASS","STEP_TYPE","isEnum","enm","values","includes","stepReducer","previousState","action","type","RESET","UPDATE","merge","moment","require","isValidDate","dt","isValid","getDateTime","date","substring","DateTime","fromJSDate","getAge","dateOfBirth","dob","now","yearNow","year","monthNow","month","dateNow","day","yearDob","monthDob","dateDob","years","months","days","getDateTimeAge","LANDING","RESULTS","NO_RESULTS","SUMMARY","log","params","console","noel","message","_Fragment","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","Wizard","text","step","_props$step","title","steps","showStepId","_props$step2","id","className","STEP_HEADER","_props$step3","subTitle","STEP_SUBTITLE","dangerouslySetInnerHTML","__html","_props$step4","info","SiteAlert","variant","showIcon","STEP_INFO","_props$step5","footer","STEP_FOOTER","dispatchForm","wizard","goToStep","data","fileName","blob","Blob","FileSaver","saveAs","DevPanel","dev","_jsxs","Accordion","items","content","JSON","stringify","expanded","NAVBAR","Button","secondary","onClick","resetQuestionable","ProgressBar","progressBar","hide","completed","getProgressPercent","PROGRESS_BAR","PB","bgColor","baseBgColor","isLabelVisible","borderRadius","getIndicatorStep","s","StepIndicatorStep","label","status","StepIndicator","sections","getSections","SI","centered","counters","map","ProgressFactory","position","Steps","getNextStep","getPreviousStep","stepId","DOB","undefined","_props$form","age","_props$form$age","question","answers","q","_form$age","MULTIPLE_CHOICE","answer","indexOf","kebabCase","getFieldSetName","B","NAVBAR_BUTTON","dir","disabled","unstyled","mode","outline","PreviousButton","layoutMismatch","verticalPos","nav","prev","surveyStart","flow","surveyEnd","notEditMode","EDIT","buttons","defaultLabel","goToPrevStep","NextButton","VIEW","isNextEnabled","goToNextStep","NavBar","DesignLayout","CardGroup","Card","headerFirst","gridLayout","tablet","col","containerProps","CardHeader","header","CardBody","CardFooter","surveySchema","schemaPart","properties","$ref","schemaFull","survey","Pages","result","global","reason","match","_result$match","explanation","ageCalc","minAge","maxAge","_props$form$age2","keys","forEach","getQuestionById","getResults","getReason","Questions","handler","updateForm","getDomId","Radio","checked","isSelected","MULTI_CHOICE","onChange","tile","questions","showAnswerBorder","Fieldset","legend","MULTI_CHOICE_GROUP","legendStyle","a","getRadio","Checkbox","MULTI_SELECT","MULTI_SELECT_GROUP","getCheckbox","birthdate","padStart","Edit","schema","schemaProps","getStepSchema","Form","uiSchema","onSubmit","formData","saveAsJson","EditStep","StepLayout","borderClass","titleClass","STEP_LAYOUT","getHeader","getSubtitle","getInfoBox","getFooter","LandingPage","body","NoResultsPage","ResultsPage","getAction","SummaryBox","heading","bodyHeader","RESULTS_SUMMARY_HEADER","bodySubHeader","RESULTS_SUMMARY_BOX","description","getAnswers","SummaryPage","DateOfBirth","getBirthdate","_Questions$getBirthda","_Questions$getBirthda2","_Questions$getBirthda3","_Questions$getBirthda4","_Questions$getBirthda5","_Questions$getBirthda6","onDateOfBirthChange","e","unit","val","bd","toBirthdate","getDateInput","YEAR","DateInput","capitalize","maxLength","minLength","defaultValue","DateInputGroup","MONTH","DAY","DateOfBirthStep","MultipleChoice","getRadios","MultipleChoiceStep","MultipleSelect","getCheckboxes","MultipleSelectStep","viewFactory","getStepById","stepData","MULTIPLE_SELECT","QuestionFactory","page","getPageById","PageFactory","StepFactory","questionData","pageData","DesignFactory","Questionable","useWizard","useReducer","BASE","PROGRESS_BAR_TOP_SECTION","STEP_LAYOUT_SECTION","PROGRESS_BAR_BOTTOM_SECTION","DEV_PANEL_SECTION"],"mappings":"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"}